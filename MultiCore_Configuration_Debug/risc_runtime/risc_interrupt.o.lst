   1              		.section .mdebug.abi32
   2              		.previous
   3              		.gnu_attribute 4, 1
   4              		.text
   5              	$Ltext0:
   6              		.cfi_sections	.debug_frame
   7              		.data
   8              		.align	2
  11              	risc_hnlr_func:
  12 0000 FFFFFFFF 		.word	-1
  13 0004 00000000 		.space	700
  13      00000000 
  13      00000000 
  13      00000000 
  13      00000000 
  14              		.align	2
  17              	MASKR:
  18 02c0 10402FB8 		.word	-1204862960
  19 02c4 18402FB8 		.word	-1204862952
  20 02c8 20402FB8 		.word	-1204862944
  21 02cc 28402FB8 		.word	-1204862936
  22              		.align	2
  25              	QSTR:
  26 02d0 14402FB8 		.word	-1204862956
  27 02d4 1C402FB8 		.word	-1204862948
  28 02d8 24402FB8 		.word	-1204862940
  29 02dc 2C402FB8 		.word	-1204862932
  30              		.text
  31              		.align	2
  32              		.globl	risc_set_interrupts_vector
  33              	$LFB0 = .
  34              		.file 1 "../risc_runtime/risc_interrupt.c"
   1:../risc_runtime/risc_interrupt.c **** // ******************** risc_interrupt.c ***************************************
   2:../risc_runtime/risc_interrupt.c **** //                 Risc-Dsp runtime library
   3:../risc_runtime/risc_interrupt.c **** //
   4:../risc_runtime/risc_interrupt.c **** // Interface to enable/disable risc interrupts
   5:../risc_runtime/risc_interrupt.c **** // by setting MASKR0, MASKR1, MASKR2
   6:../risc_runtime/risc_interrupt.c **** // This file contains handler function. Don't use it!
   7:../risc_runtime/risc_interrupt.c **** // Use library interface
   8:../risc_runtime/risc_interrupt.c **** //
   9:../risc_runtime/risc_interrupt.c **** // (c) multicore.ru
  10:../risc_runtime/risc_interrupt.c **** //
  11:../risc_runtime/risc_interrupt.c **** // *******************************************************************
  12:../risc_runtime/risc_interrupt.c **** 
  13:../risc_runtime/risc_interrupt.c **** #include "cpu.h"
  14:../risc_runtime/risc_interrupt.c **** #include "risc_interrupt.h"
  15:../risc_runtime/risc_interrupt.c **** #include "system.h"
  16:../risc_runtime/risc_interrupt.c **** 
  17:../risc_runtime/risc_interrupt.c **** #define MASKR_NUM_MAX (5)
  18:../risc_runtime/risc_interrupt.c **** static volatile RISC_INTERRUPT risc_hnlr_func[MASKR_NUM_MAX*32+16] = {RISC_INTERRUPT_UNKNOWN};
  19:../risc_runtime/risc_interrupt.c **** 
  20:../risc_runtime/risc_interrupt.c **** 
  21:../risc_runtime/risc_interrupt.c **** #if (defined(TARGET_MCT04))
  22:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (2)
  23:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (5)
  24:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
  25:../risc_runtime/risc_interrupt.c ****   {
  26:../risc_runtime/risc_interrupt.c **** 	  &MASKR0(0), &MASKR1(0), &MASKR2(0), &MASKR3(0), &MASKR4(0),
  27:../risc_runtime/risc_interrupt.c **** 	  &MASKR0(1), &MASKR1(1), &MASKR2(1), &MASKR3(1), &MASKR4(1)
  28:../risc_runtime/risc_interrupt.c ****   };
  29:../risc_runtime/risc_interrupt.c **** 
  30:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
  31:../risc_runtime/risc_interrupt.c ****   {
  32:../risc_runtime/risc_interrupt.c **** 	  &QSTR0(0), &QSTR1(0), &QSTR2(0), &QSTR3(0), &QSTR4(0),
  33:../risc_runtime/risc_interrupt.c **** 	  &QSTR0(1), &QSTR1(1), &QSTR2(1), &QSTR3(1), &QSTR4(1)
  34:../risc_runtime/risc_interrupt.c ****   };
  35:../risc_runtime/risc_interrupt.c **** 
  36:../risc_runtime/risc_interrupt.c ****   #define SET_TR_CRAM() SYS_CSR(_get_cpu_id()) |= 2
  37:../risc_runtime/risc_interrupt.c ****   #define UNSET_TR_CRAM() SYS_CSR(_get_cpu_id()) &= ~(2)
  38:../risc_runtime/risc_interrupt.c **** #elif (defined(TARGET_MCT05))
  39:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (1)
  40:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (4)
  41:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
  42:../risc_runtime/risc_interrupt.c ****   {
  43:../risc_runtime/risc_interrupt.c **** 	  &MASKR0(0), &MASKR1(0), &MASKR2(0), &MASKR3(0)
  44:../risc_runtime/risc_interrupt.c ****   };
  45:../risc_runtime/risc_interrupt.c **** 
  46:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
  47:../risc_runtime/risc_interrupt.c ****   {
  48:../risc_runtime/risc_interrupt.c **** 	  &QSTR0(0), &QSTR1(0), &QSTR2(0), &QSTR3(0)
  49:../risc_runtime/risc_interrupt.c ****   };
  50:../risc_runtime/risc_interrupt.c **** 
  51:../risc_runtime/risc_interrupt.c ****   #define SET_TR_CRAM() SYS_CSR(_get_cpu_id()) |= 2
  52:../risc_runtime/risc_interrupt.c ****   #define UNSET_TR_CRAM() SYS_CSR(_get_cpu_id()) &= ~(2)
  53:../risc_runtime/risc_interrupt.c **** #elif (defined(TARGET_MCT07))
  54:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (1)
  55:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (4)
  56:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
  57:../risc_runtime/risc_interrupt.c ****   {
  58:../risc_runtime/risc_interrupt.c **** 	  &MASKR0(0), &MASKR1(0), &MASKR2(0), &MASKR3(0)
  59:../risc_runtime/risc_interrupt.c ****   };
  60:../risc_runtime/risc_interrupt.c **** 
  61:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
  62:../risc_runtime/risc_interrupt.c ****   {
  63:../risc_runtime/risc_interrupt.c **** 	  &QSTR0(0), &QSTR1(0), &QSTR2(0), &QSTR3(0)
  64:../risc_runtime/risc_interrupt.c ****   };
  65:../risc_runtime/risc_interrupt.c **** 
  66:../risc_runtime/risc_interrupt.c ****   #define SET_TR_CRAM() SYS_CSR(_get_cpu_id()) |= 2
  67:../risc_runtime/risc_interrupt.c ****   #define UNSET_TR_CRAM() SYS_CSR(_get_cpu_id()) &= ~(2)
  68:../risc_runtime/risc_interrupt.c **** #elif (defined(TARGET_MC0428))
  69:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (1)
  70:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (4)
  71:../risc_runtime/risc_interrupt.c **** 
  72:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
  73:../risc_runtime/risc_interrupt.c ****   {
  74:../risc_runtime/risc_interrupt.c **** 	  &MASKR0(0), &MASKR1(0), &MASKR2(0), &MASKR3(0)
  75:../risc_runtime/risc_interrupt.c ****   };
  76:../risc_runtime/risc_interrupt.c **** 
  77:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
  78:../risc_runtime/risc_interrupt.c ****   {
  79:../risc_runtime/risc_interrupt.c **** 	  &QSTR0(0), &QSTR1(0), &QSTR2(0), &QSTR3(0)
  80:../risc_runtime/risc_interrupt.c ****   };
  81:../risc_runtime/risc_interrupt.c **** 
  82:../risc_runtime/risc_interrupt.c ****   #define SET_TR_CRAM() SYS_CSR |= 2
  83:../risc_runtime/risc_interrupt.c ****   #define UNSET_TR_CRAM() SYS_CSR &= ~(2)
  84:../risc_runtime/risc_interrupt.c **** #elif (defined(TARGET_NVCOM02T))
  85:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (1)
  86:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (4)
  87:../risc_runtime/risc_interrupt.c **** 
  88:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
  89:../risc_runtime/risc_interrupt.c ****   {
  90:../risc_runtime/risc_interrupt.c **** 	  &MASKR0(0), &MASKR1(0), &MASKR2(0)
  91:../risc_runtime/risc_interrupt.c ****   };
  92:../risc_runtime/risc_interrupt.c **** 
  93:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
  94:../risc_runtime/risc_interrupt.c ****   {
  95:../risc_runtime/risc_interrupt.c **** 	  &QSTR0(0), &QSTR1(0), &QSTR2(0)
  96:../risc_runtime/risc_interrupt.c ****   };
  97:../risc_runtime/risc_interrupt.c **** 
  98:../risc_runtime/risc_interrupt.c ****   #define SET_TR_CRAM() SYS_CSR |= 2
  99:../risc_runtime/risc_interrupt.c ****   #define UNSET_TR_CRAM() SYS_CSR &= ~(2)
 100:../risc_runtime/risc_interrupt.c **** #elif (defined(TARGET_MCT03P))
 101:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (1)
 102:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (4)
 103:../risc_runtime/risc_interrupt.c **** 
 104:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
 105:../risc_runtime/risc_interrupt.c ****   {
 106:../risc_runtime/risc_interrupt.c **** 	  &MASKR0(0), &MASKR1(0), &MASKR2(0), &MASKR3(0)
 107:../risc_runtime/risc_interrupt.c ****   };
 108:../risc_runtime/risc_interrupt.c **** 
 109:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
 110:../risc_runtime/risc_interrupt.c ****   {
 111:../risc_runtime/risc_interrupt.c **** 	  &QSTR0(0), &QSTR1(0), &QSTR2(0), &QSTR3(0)
 112:../risc_runtime/risc_interrupt.c ****   };
 113:../risc_runtime/risc_interrupt.c **** 
 114:../risc_runtime/risc_interrupt.c ****   #define SET_TR_CRAM() SYS_CSR |= 2
 115:../risc_runtime/risc_interrupt.c ****   #define UNSET_TR_CRAM() SYS_CSR &= ~(2)
 116:../risc_runtime/risc_interrupt.c **** #elif (defined(TARGET_MC30SF6))
 117:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (1)
 118:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (4)
 119:../risc_runtime/risc_interrupt.c **** 
 120:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
 121:../risc_runtime/risc_interrupt.c ****   {
 122:../risc_runtime/risc_interrupt.c ****     &MASKR0, &MASKR1, &MASKR2, &MASKR3
 123:../risc_runtime/risc_interrupt.c ****   };
 124:../risc_runtime/risc_interrupt.c **** 
 125:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
 126:../risc_runtime/risc_interrupt.c ****   {
 127:../risc_runtime/risc_interrupt.c ****     &QSTR0, &QSTR1, &QSTR2, &QSTR3
 128:../risc_runtime/risc_interrupt.c ****   };
 129:../risc_runtime/risc_interrupt.c **** 
 130:../risc_runtime/risc_interrupt.c ****   #define SET_TR_CRAM() SYS_CSR |= 2
 131:../risc_runtime/risc_interrupt.c ****   #define UNSET_TR_CRAM() SYS_CSR &= ~(2)
 132:../risc_runtime/risc_interrupt.c **** #elif (defined(TARGET_MC24R) || defined(TARGET_NVCOM02T))
 133:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (1)
 134:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (3)
 135:../risc_runtime/risc_interrupt.c **** 
 136:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
 137:../risc_runtime/risc_interrupt.c ****   {
 138:../risc_runtime/risc_interrupt.c **** 	  &MASKR0, &MASKR1, &MASKR2
 139:../risc_runtime/risc_interrupt.c ****   };
 140:../risc_runtime/risc_interrupt.c **** 
 141:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
 142:../risc_runtime/risc_interrupt.c ****   {
 143:../risc_runtime/risc_interrupt.c **** 	  &QSTR0, &QSTR1, &QSTR2
 144:../risc_runtime/risc_interrupt.c ****   };
 145:../risc_runtime/risc_interrupt.c **** 
 146:../risc_runtime/risc_interrupt.c ****  #define SET_TR_CRAM() SYS_CSR |= 2
 147:../risc_runtime/risc_interrupt.c ****  #define UNSET_TR_CRAM() SYS_CSR &= ~(2)
 148:../risc_runtime/risc_interrupt.c **** #elif (defined(TARGET_MCT06))
 149:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (1)
 150:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (5)
 151:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
 152:../risc_runtime/risc_interrupt.c ****   {
 153:../risc_runtime/risc_interrupt.c **** 	  &MASKR0(0), &MASKR1(0), &MASKR2(0), &MASKR3(0), &MASKR4(0)
 154:../risc_runtime/risc_interrupt.c ****   };
 155:../risc_runtime/risc_interrupt.c **** 
 156:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
 157:../risc_runtime/risc_interrupt.c ****   {
 158:../risc_runtime/risc_interrupt.c **** 	  &QSTR0(0), &QSTR1(0), &QSTR2(0), &QSTR3(0), &QSTR4(0)
 159:../risc_runtime/risc_interrupt.c ****   };
 160:../risc_runtime/risc_interrupt.c **** 
 161:../risc_runtime/risc_interrupt.c ****   #define SET_TR_CRAM() SYS_CSR(_get_cpu_id()) |= 2
 162:../risc_runtime/risc_interrupt.c ****   #define UNSET_TR_CRAM() SYS_CSR(_get_cpu_id()) &= ~(2)
 163:../risc_runtime/risc_interrupt.c **** 
 164:../risc_runtime/risc_interrupt.c **** //by irs for mct08
 165:../risc_runtime/risc_interrupt.c **** #elif (defined(TARGET_MCT08))
 166:../risc_runtime/risc_interrupt.c ****   #define  CPU_NUMS (1)
 167:../risc_runtime/risc_interrupt.c ****   #define  MASKR_NUMS (5)
 168:../risc_runtime/risc_interrupt.c ****   static volatile int* MASKR[CPU_NUMS][MASKR_NUMS] =
 169:../risc_runtime/risc_interrupt.c ****   {
 170:../risc_runtime/risc_interrupt.c **** 	  &MASKR0, &MASKR1, &MASKR2, &MASKR3, &MASKR4
 171:../risc_runtime/risc_interrupt.c **** 
 172:../risc_runtime/risc_interrupt.c ****   };
 173:../risc_runtime/risc_interrupt.c **** 
 174:../risc_runtime/risc_interrupt.c ****   static volatile int* QSTR[CPU_NUMS][MASKR_NUMS] =
 175:../risc_runtime/risc_interrupt.c ****   {
 176:../risc_runtime/risc_interrupt.c **** 	  &QSTR0, &QSTR1, &QSTR2, &QSTR3, &QSTR4
 177:../risc_runtime/risc_interrupt.c ****   };
 178:../risc_runtime/risc_interrupt.c **** 
 179:../risc_runtime/risc_interrupt.c ****   #define SET_TR_CRAM() SYS_CSR |= (1<<1);
 180:../risc_runtime/risc_interrupt.c ****   #define UNSET_TR_CRAM() SYS_CSR &= ~(2)
 181:../risc_runtime/risc_interrupt.c **** //end by irs for mct08
 182:../risc_runtime/risc_interrupt.c **** 
 183:../risc_runtime/risc_interrupt.c **** 
 184:../risc_runtime/risc_interrupt.c **** #endif
 185:../risc_runtime/risc_interrupt.c **** 
 186:../risc_runtime/risc_interrupt.c **** void risc_set_interrupts_vector(INTERRUPT_VECTORS loc)
 187:../risc_runtime/risc_interrupt.c **** {
  35              		.loc 1 187 0
  36              		.cfi_startproc
  37              		.set	nomips16
  38              		.ent	risc_set_interrupts_vector
  40              	risc_set_interrupts_vector:
  41              		.frame	$fp,40,$31		# vars= 32, regs= 1/0, args= 0, gp= 0
  42              		.mask	0x40000000,-4
  43              		.fmask	0x00000000,0
  44 0000 D8FFBD27 		addiu	$sp,$sp,-40
  45              	$LCFI0 = .
  46              		.cfi_def_cfa_offset 40
  47 0004 2400BEAF 		sw	$fp,36($sp)
  48              		.cfi_offset 30, -4
  49 0008 25F0A003 		move	$fp,$sp
  50              	$LCFI1 = .
  51              		.cfi_def_cfa_register 30
  52 000c 2800C4AF 		sw	$4,40($fp)
 188:../risc_runtime/risc_interrupt.c ****     unsigned int temp = 0;
  53              		.loc 1 188 0
  54 0010 0000C0AF 		sw	$0,0($fp)
 189:../risc_runtime/risc_interrupt.c ****     asm volatile ("mfc0 %0, $12" :"=r"(temp));
  55              		.loc 1 189 0
  56              	 #APP
  57              	 # 189 "../risc_runtime/risc_interrupt.c" 1
  58 0014 00600240 		mfc0 $2, $12
  59              	 # 0 "" 2
  60              	 #NO_APP
  61 0018 0000C2AF 		sw	$2,0($fp)
 190:../risc_runtime/risc_interrupt.c ****     temp &= ~(4);
  62 001c 00000000 		.loc 1 190 0
  63 0020 0000C38F 		lw	$3,0($fp)
  64 0024 FBFF0224 		li	$2,-5			# 0xfffffffffffffffb
  65 0028 24106200 		and	$2,$3,$2
  66 002c 0000C2AF 		sw	$2,0($fp)
 191:../risc_runtime/risc_interrupt.c ****     asm volatile ("mtc0 %0, $12" ::"r"(temp));
  67 0030 00000000 		.loc 1 191 0
  68 0034 0000C28F 		lw	$2,0($fp)
  69              		#nop
  70              	 #APP
  71 0038 00000000 	 # 191 "../risc_runtime/risc_interrupt.c" 1
  72 003c 00608240 		mtc0 $2, $12
  73              	 # 0 "" 2
 192:../risc_runtime/risc_interrupt.c **** 
 193:../risc_runtime/risc_interrupt.c ****     switch(loc)
  74              		.loc 1 193 0
  75              	 #NO_APP
  76 0040 2800C28F 		lw	$2,40($fp)
  77 0044 00000000 		#nop
  78 0048 0600422C 		sltu	$2,$2,6
  79 004c C9004010 		beq	$2,$0,$L1
  79      00000000 
  80 0054 2800C28F 		lw	$2,40($fp)
  81 0058 00000000 		#nop
  82 005c 80180200 		sll	$3,$2,2
  83 0060 0000023C 		lui	$2,%hi($L4)
  84 0064 00004224 		addiu	$2,$2,%lo($L4)
  85 0068 21106200 		addu	$2,$3,$2
  86 006c 0000428C 		lw	$2,0($2)
  87 0070 00000000 		#nop
  88 0074 08004000 		j	$2
  88      00000000 
  89              		.rdata
  90              		.align	2
  91              		.align	2
  92              	$L4:
  93 0000 7C000000 		.word	$L3
  94 0004 A0010000 		.word	$L5
  95 0008 04020000 		.word	$L6
  96 000c 14030000 		.word	$L7
  97 0010 04010000 		.word	$L8
  98 0014 8C020000 		.word	$L9
  99              		.text
 100              	$L3:
 194:../risc_runtime/risc_interrupt.c ****     {
 195:../risc_runtime/risc_interrupt.c ****     case INTH_80000180:
 196:../risc_runtime/risc_interrupt.c ****         mips_write_c0_register(C0_CAUSE, 0);
 101              		.loc 1 196 0
 102 007c 25100000 		move	$2,$0
 103              	 #APP
 104              	 # 196 "../risc_runtime/risc_interrupt.c" 1
 105 0080 00688240 		mtc0	$2, $13 
 106 0084 00000000 		nop 
 107 0088 00000000 		nop 
 108 008c 00000000 		nop
 109              	 # 0 "" 2
 110              	 #NO_APP
 111              	$LBB2 = .
 197:../risc_runtime/risc_interrupt.c ****         temp = mips_read_c0_register(C0_STATUS);
 112              		.loc 1 197 0
 113              	 #APP
 114              	 # 197 "../risc_runtime/risc_interrupt.c" 1
 115 0090 00600240 		mfc0	$2, $12
 116              	 # 0 "" 2
 117              	 #NO_APP
 118 0094 0400C2AF 		sw	$2,4($fp)
 118      00000000 
 119 009c 0400C28F 		lw	$2,4($fp)
 120              		#nop
 121 00a0 00000000 	$LBE2 = .
 122 00a4 0000C2AF 		sw	$2,0($fp)
 198:../risc_runtime/risc_interrupt.c ****         temp &= ~(1<<22);
 123 00a8 00000000 		.loc 1 198 0
 124 00ac 0000C38F 		lw	$3,0($fp)
 125 00b0 BFFF023C 		li	$2,-4259840			# 0xffffffffffbf0000
 126 00b4 FFFF4234 		ori	$2,$2,0xffff
 127 00b8 24106200 		and	$2,$3,$2
 128 00bc 0000C2AF 		sw	$2,0($fp)
 199:../risc_runtime/risc_interrupt.c ****         mips_write_c0_register(C0_STATUS, temp);
 129 00c0 00000000 		.loc 1 199 0
 130 00c4 0000C28F 		lw	$2,0($fp)
 131              		#nop
 132              	 #APP
 133 00c8 00000000 	 # 199 "../risc_runtime/risc_interrupt.c" 1
 134 00cc 00608240 		mtc0	$2, $12 
 135 00d0 00000000 		nop 
 136 00d4 00000000 		nop 
 137 00d8 00000000 		nop
 138              	 # 0 "" 2
 200:../risc_runtime/risc_interrupt.c ****         UNSET_TR_CRAM();
 139              		.loc 1 200 0
 140              	 #NO_APP
 141 00dc 2FB8023C 		li	$2,-1204879360			# 0xffffffffb82f0000
 142 00e0 08404234 		ori	$2,$2,0x4008
 143 00e4 2FB8033C 		li	$3,-1204879360			# 0xffffffffb82f0000
 144 00e8 08406334 		ori	$3,$3,0x4008
 145 00ec 0000648C 		lw	$4,0($3)
 146 00f0 FDFF0324 		li	$3,-3			# 0xfffffffffffffffd
 147 00f4 24188300 		and	$3,$4,$3
 148 00f8 000043AC 		sw	$3,0($2)
 201:../risc_runtime/risc_interrupt.c ****         break;
 149              		.loc 1 201 0
 150 00fc DD000008 		j	$L1
 150      00000000 
 151              	$L8:
 202:../risc_runtime/risc_interrupt.c ****     case INTH_B8000180:
 203:../risc_runtime/risc_interrupt.c ****         mips_write_c0_register(C0_CAUSE, 0);
 152              		.loc 1 203 0
 153 0104 25100000 		move	$2,$0
 154              	 #APP
 155              	 # 203 "../risc_runtime/risc_interrupt.c" 1
 156 0108 00688240 		mtc0	$2, $13 
 157 010c 00000000 		nop 
 158 0110 00000000 		nop 
 159 0114 00000000 		nop
 160              	 # 0 "" 2
 161              	 #NO_APP
 162              	$LBB3 = .
 204:../risc_runtime/risc_interrupt.c ****         temp = mips_read_c0_register(C0_STATUS);
 163              		.loc 1 204 0
 164              	 #APP
 165              	 # 204 "../risc_runtime/risc_interrupt.c" 1
 166 0118 00600240 		mfc0	$2, $12
 167              	 # 0 "" 2
 168              	 #NO_APP
 169 011c 0800C2AF 		sw	$2,8($fp)
 169      00000000 
 170 0124 0800C28F 		lw	$2,8($fp)
 171              		#nop
 172 0128 00000000 	$LBE3 = .
 173 012c 0000C2AF 		sw	$2,0($fp)
 205:../risc_runtime/risc_interrupt.c ****       	temp &= ~(1<<22);
 174 0130 00000000 		.loc 1 205 0
 175 0134 0000C38F 		lw	$3,0($fp)
 176 0138 BFFF023C 		li	$2,-4259840			# 0xffffffffffbf0000
 177 013c FFFF4234 		ori	$2,$2,0xffff
 178 0140 24106200 		and	$2,$3,$2
 179 0144 0000C2AF 		sw	$2,0($fp)
 206:../risc_runtime/risc_interrupt.c **** 			//#if (defined(TARGET_MCT08))
 207:../risc_runtime/risc_interrupt.c ****       			temp &= (1<<0);
 180 0148 00000000 		.loc 1 207 0
 181 014c 0000C28F 		lw	$2,0($fp)
 182 0150 00000000 		#nop
 183 0154 01004230 		andi	$2,$2,0x1
 184 0158 0000C2AF 		sw	$2,0($fp)
 208:../risc_runtime/risc_interrupt.c **** 			//#endif
 209:../risc_runtime/risc_interrupt.c ****       	mips_write_c0_register(C0_STATUS, temp);
 185 015c 00000000 		.loc 1 209 0
 186 0160 0000C28F 		lw	$2,0($fp)
 187              		#nop
 188              	 #APP
 189 0164 00000000 	 # 209 "../risc_runtime/risc_interrupt.c" 1
 190 0168 00608240 		mtc0	$2, $12 
 191 016c 00000000 		nop 
 192 0170 00000000 		nop 
 193 0174 00000000 		nop
 194              	 # 0 "" 2
 210:../risc_runtime/risc_interrupt.c ****         SET_TR_CRAM();
 195              		.loc 1 210 0
 196              	 #NO_APP
 197 0178 2FB8023C 		li	$2,-1204879360			# 0xffffffffb82f0000
 198 017c 08404234 		ori	$2,$2,0x4008
 199 0180 2FB8033C 		li	$3,-1204879360			# 0xffffffffb82f0000
 200 0184 08406334 		ori	$3,$3,0x4008
 201 0188 0000638C 		lw	$3,0($3)
 202 018c 00000000 		#nop
 203 0190 02006334 		ori	$3,$3,0x2
 204 0194 000043AC 		sw	$3,0($2)
 211:../risc_runtime/risc_interrupt.c ****         break;
 205              		.loc 1 211 0
 206 0198 DD000008 		j	$L1
 206      00000000 
 207              	$L5:
 212:../risc_runtime/risc_interrupt.c ****     case INTH_BFC00380:
 213:../risc_runtime/risc_interrupt.c ****     	mips_write_c0_register(C0_CAUSE, 0);
 208              		.loc 1 213 0
 209 01a0 25100000 		move	$2,$0
 210              	 #APP
 211              	 # 213 "../risc_runtime/risc_interrupt.c" 1
 212 01a4 00688240 		mtc0	$2, $13 
 213 01a8 00000000 		nop 
 214 01ac 00000000 		nop 
 215 01b0 00000000 		nop
 216              	 # 0 "" 2
 217              	 #NO_APP
 218              	$LBB4 = .
 214:../risc_runtime/risc_interrupt.c ****     	temp = mips_read_c0_register(C0_STATUS);
 219              		.loc 1 214 0
 220              	 #APP
 221              	 # 214 "../risc_runtime/risc_interrupt.c" 1
 222 01b4 00600240 		mfc0	$2, $12
 223              	 # 0 "" 2
 224              	 #NO_APP
 225 01b8 0C00C2AF 		sw	$2,12($fp)
 225      00000000 
 226 01c0 0C00C28F 		lw	$2,12($fp)
 227              		#nop
 228 01c4 00000000 	$LBE4 = .
 229 01c8 0000C2AF 		sw	$2,0($fp)
 215:../risc_runtime/risc_interrupt.c ****         temp |= (1<<22);
 230 01cc 00000000 		.loc 1 215 0
 231 01d0 0000C38F 		lw	$3,0($fp)
 232 01d4 4000023C 		li	$2,4194304			# 0x400000
 233 01d8 25106200 		or	$2,$3,$2
 234 01dc 0000C2AF 		sw	$2,0($fp)
 216:../risc_runtime/risc_interrupt.c ****         mips_write_c0_register(C0_STATUS, temp);
 235 01e0 00000000 		.loc 1 216 0
 236 01e4 0000C28F 		lw	$2,0($fp)
 237              		#nop
 238              	 #APP
 239 01e8 00000000 	 # 216 "../risc_runtime/risc_interrupt.c" 1
 240 01ec 00608240 		mtc0	$2, $12 
 241 01f0 00000000 		nop 
 242 01f4 00000000 		nop 
 243 01f8 00000000 		nop
 244              	 # 0 "" 2
 217:../risc_runtime/risc_interrupt.c ****         break;
 245              		.loc 1 217 0
 246              	 #NO_APP
 247 01fc DD000008 		j	$L1
 247      00000000 
 248              	$L6:
 218:../risc_runtime/risc_interrupt.c ****     case INTH_80000200:
 219:../risc_runtime/risc_interrupt.c ****         mips_write_c0_register(C0_CAUSE, (1<<23));
 249              		.loc 1 219 0
 250 0204 8000023C 		li	$2,8388608			# 0x800000
 251              	 #APP
 252              	 # 219 "../risc_runtime/risc_interrupt.c" 1
 253 0208 00688240 		mtc0	$2, $13 
 254 020c 00000000 		nop 
 255 0210 00000000 		nop 
 256 0214 00000000 		nop
 257              	 # 0 "" 2
 258              	 #NO_APP
 259              	$LBB5 = .
 220:../risc_runtime/risc_interrupt.c ****         temp = mips_read_c0_register(C0_STATUS);
 260              		.loc 1 220 0
 261              	 #APP
 262              	 # 220 "../risc_runtime/risc_interrupt.c" 1
 263 0218 00600240 		mfc0	$2, $12
 264              	 # 0 "" 2
 265              	 #NO_APP
 266 021c 1000C2AF 		sw	$2,16($fp)
 266      00000000 
 267 0224 1000C28F 		lw	$2,16($fp)
 268              		#nop
 269 0228 00000000 	$LBE5 = .
 270 022c 0000C2AF 		sw	$2,0($fp)
 221:../risc_runtime/risc_interrupt.c ****         temp &= ~(1<<22);
 271 0230 00000000 		.loc 1 221 0
 272 0234 0000C38F 		lw	$3,0($fp)
 273 0238 BFFF023C 		li	$2,-4259840			# 0xffffffffffbf0000
 274 023c FFFF4234 		ori	$2,$2,0xffff
 275 0240 24106200 		and	$2,$3,$2
 276 0244 0000C2AF 		sw	$2,0($fp)
 222:../risc_runtime/risc_interrupt.c ****         mips_write_c0_register(C0_STATUS, temp);
 277 0248 00000000 		.loc 1 222 0
 278 024c 0000C28F 		lw	$2,0($fp)
 279              		#nop
 280              	 #APP
 281 0250 00000000 	 # 222 "../risc_runtime/risc_interrupt.c" 1
 282 0254 00608240 		mtc0	$2, $12 
 283 0258 00000000 		nop 
 284 025c 00000000 		nop 
 285 0260 00000000 		nop
 286              	 # 0 "" 2
 223:../risc_runtime/risc_interrupt.c ****         UNSET_TR_CRAM();
 287              		.loc 1 223 0
 288              	 #NO_APP
 289 0264 2FB8023C 		li	$2,-1204879360			# 0xffffffffb82f0000
 290 0268 08404234 		ori	$2,$2,0x4008
 291 026c 2FB8033C 		li	$3,-1204879360			# 0xffffffffb82f0000
 292 0270 08406334 		ori	$3,$3,0x4008
 293 0274 0000648C 		lw	$4,0($3)
 294 0278 FDFF0324 		li	$3,-3			# 0xfffffffffffffffd
 295 027c 24188300 		and	$3,$4,$3
 296 0280 000043AC 		sw	$3,0($2)
 224:../risc_runtime/risc_interrupt.c ****         break;
 297              		.loc 1 224 0
 298 0284 DD000008 		j	$L1
 298      00000000 
 299              	$L9:
 225:../risc_runtime/risc_interrupt.c ****     case INTH_B8000200:
 226:../risc_runtime/risc_interrupt.c ****     	mips_write_c0_register(C0_CAUSE, (1<<23));
 300              		.loc 1 226 0
 301 028c 8000023C 		li	$2,8388608			# 0x800000
 302              	 #APP
 303              	 # 226 "../risc_runtime/risc_interrupt.c" 1
 304 0290 00688240 		mtc0	$2, $13 
 305 0294 00000000 		nop 
 306 0298 00000000 		nop 
 307 029c 00000000 		nop
 308              	 # 0 "" 2
 309              	 #NO_APP
 310              	$LBB6 = .
 227:../risc_runtime/risc_interrupt.c ****     	temp = mips_read_c0_register(C0_STATUS);
 311              		.loc 1 227 0
 312              	 #APP
 313              	 # 227 "../risc_runtime/risc_interrupt.c" 1
 314 02a0 00600240 		mfc0	$2, $12
 315              	 # 0 "" 2
 316              	 #NO_APP
 317 02a4 1400C2AF 		sw	$2,20($fp)
 317      00000000 
 318 02ac 1400C28F 		lw	$2,20($fp)
 319              		#nop
 320 02b0 00000000 	$LBE6 = .
 321 02b4 0000C2AF 		sw	$2,0($fp)
 228:../risc_runtime/risc_interrupt.c ****         temp &= ~(1<<22);
 322 02b8 00000000 		.loc 1 228 0
 323 02bc 0000C38F 		lw	$3,0($fp)
 324 02c0 BFFF023C 		li	$2,-4259840			# 0xffffffffffbf0000
 325 02c4 FFFF4234 		ori	$2,$2,0xffff
 326 02c8 24106200 		and	$2,$3,$2
 327 02cc 0000C2AF 		sw	$2,0($fp)
 229:../risc_runtime/risc_interrupt.c ****         mips_write_c0_register(C0_STATUS, temp);
 328 02d0 00000000 		.loc 1 229 0
 329 02d4 0000C28F 		lw	$2,0($fp)
 330              		#nop
 331              	 #APP
 332 02d8 00000000 	 # 229 "../risc_runtime/risc_interrupt.c" 1
 333 02dc 00608240 		mtc0	$2, $12 
 334 02e0 00000000 		nop 
 335 02e4 00000000 		nop 
 336 02e8 00000000 		nop
 337              	 # 0 "" 2
 230:../risc_runtime/risc_interrupt.c ****         SET_TR_CRAM();
 338              		.loc 1 230 0
 339              	 #NO_APP
 340 02ec 2FB8023C 		li	$2,-1204879360			# 0xffffffffb82f0000
 341 02f0 08404234 		ori	$2,$2,0x4008
 342 02f4 2FB8033C 		li	$3,-1204879360			# 0xffffffffb82f0000
 343 02f8 08406334 		ori	$3,$3,0x4008
 344 02fc 0000638C 		lw	$3,0($3)
 345 0300 00000000 		#nop
 346 0304 02006334 		ori	$3,$3,0x2
 347 0308 000043AC 		sw	$3,0($2)
 231:../risc_runtime/risc_interrupt.c ****         break;
 348              		.loc 1 231 0
 349 030c DD000008 		j	$L1
 349      00000000 
 350              	$L7:
 232:../risc_runtime/risc_interrupt.c ****     case INTH_BFC00400:
 233:../risc_runtime/risc_interrupt.c ****     	mips_write_c0_register(C0_CAUSE, (1<<23));
 351              		.loc 1 233 0
 352 0314 8000023C 		li	$2,8388608			# 0x800000
 353              	 #APP
 354              	 # 233 "../risc_runtime/risc_interrupt.c" 1
 355 0318 00688240 		mtc0	$2, $13 
 356 031c 00000000 		nop 
 357 0320 00000000 		nop 
 358 0324 00000000 		nop
 359              	 # 0 "" 2
 360              	 #NO_APP
 361              	$LBB7 = .
 234:../risc_runtime/risc_interrupt.c ****         temp = mips_read_c0_register(C0_STATUS);
 362              		.loc 1 234 0
 363              	 #APP
 364              	 # 234 "../risc_runtime/risc_interrupt.c" 1
 365 0328 00600240 		mfc0	$2, $12
 366              	 # 0 "" 2
 367              	 #NO_APP
 368 032c 1800C2AF 		sw	$2,24($fp)
 368      00000000 
 369 0334 1800C28F 		lw	$2,24($fp)
 370              		#nop
 371 0338 00000000 	$LBE7 = .
 372 033c 0000C2AF 		sw	$2,0($fp)
 235:../risc_runtime/risc_interrupt.c ****         temp |= (1<<22);
 373 0340 00000000 		.loc 1 235 0
 374 0344 0000C38F 		lw	$3,0($fp)
 375 0348 4000023C 		li	$2,4194304			# 0x400000
 376 034c 25106200 		or	$2,$3,$2
 377 0350 0000C2AF 		sw	$2,0($fp)
 236:../risc_runtime/risc_interrupt.c ****         mips_write_c0_register(C0_STATUS, temp);
 378 0354 00000000 		.loc 1 236 0
 379 0358 0000C28F 		lw	$2,0($fp)
 380              		#nop
 381              	 #APP
 382 035c 00000000 	 # 236 "../risc_runtime/risc_interrupt.c" 1
 383 0360 00608240 		mtc0	$2, $12 
 384 0364 00000000 		nop 
 385 0368 00000000 		nop 
 386 036c 00000000 		nop
 387              	 # 0 "" 2
 237:../risc_runtime/risc_interrupt.c ****         break;
 388              		.loc 1 237 0
 389              	 #NO_APP
 390              		.set	noreorder
 391 0370 00000000 		nop
 392              		.set	reorder
 393              	$L1:
 238:../risc_runtime/risc_interrupt.c ****     };
 239:../risc_runtime/risc_interrupt.c **** }
 394              		.loc 1 239 0
 395 0374 25E8C003 		move	$sp,$fp
 396              	$LCFI2 = .
 397              		.cfi_def_cfa_register 29
 398 0378 2400BE8F 		lw	$fp,36($sp)
 399 037c 2800BD27 		addiu	$sp,$sp,40
 400              	$LCFI3 = .
 401              		.cfi_restore 30
 402              		.cfi_def_cfa_offset 0
 403 0380 0800E003 		j	$31
 403      00000000 
 404              		.end	risc_set_interrupts_vector
 405              		.cfi_endproc
 406              	$LFE0:
 408              		.align	2
 409              		.globl	risc_disable_interrupts
 410              	$LFB1 = .
 240:../risc_runtime/risc_interrupt.c **** 
 241:../risc_runtime/risc_interrupt.c **** void risc_disable_interrupts()
 242:../risc_runtime/risc_interrupt.c **** {
 411              		.loc 1 242 0
 412              		.cfi_startproc
 413              		.set	nomips16
 414              		.ent	risc_disable_interrupts
 416              	risc_disable_interrupts:
 417              		.frame	$fp,16,$31		# vars= 8, regs= 1/0, args= 0, gp= 0
 418              		.mask	0x40000000,-4
 419              		.fmask	0x00000000,0
 420 0388 F0FFBD27 		addiu	$sp,$sp,-16
 421              	$LCFI4 = .
 422              		.cfi_def_cfa_offset 16
 423 038c 0C00BEAF 		sw	$fp,12($sp)
 424              		.cfi_offset 30, -4
 425 0390 25F0A003 		move	$fp,$sp
 426              	$LCFI5 = .
 427              		.cfi_def_cfa_register 30
 428              	$LBB8 = .
 243:../risc_runtime/risc_interrupt.c ****     unsigned int CP0_Status = mips_read_c0_register(C0_STATUS);
 429              		.loc 1 243 0
 430              	 #APP
 431              	 # 243 "../risc_runtime/risc_interrupt.c" 1
 432 0394 00600240 		mfc0	$2, $12
 433              	 # 0 "" 2
 434              	 #NO_APP
 435 0398 0000C2AF 		sw	$2,0($fp)
 435      00000000 
 436 03a0 0000C28F 		lw	$2,0($fp)
 437              		#nop
 438 03a4 00000000 	$LBE8 = .
 439 03a8 0400C2AF 		sw	$2,4($fp)
 244:../risc_runtime/risc_interrupt.c ****     CP0_Status &= ~(0x1);
 440 03ac 00000000 		.loc 1 244 0
 441 03b0 0400C38F 		lw	$3,4($fp)
 442 03b4 FEFF0224 		li	$2,-2			# 0xfffffffffffffffe
 443 03b8 24106200 		and	$2,$3,$2
 444 03bc 0400C2AF 		sw	$2,4($fp)
 245:../risc_runtime/risc_interrupt.c ****     mips_write_c0_register(C0_STATUS, CP0_Status);
 445 03c0 00000000 		.loc 1 245 0
 446 03c4 0400C28F 		lw	$2,4($fp)
 447              		#nop
 448              	 #APP
 449 03c8 00000000 	 # 245 "../risc_runtime/risc_interrupt.c" 1
 450 03cc 00608240 		mtc0	$2, $12 
 451 03d0 00000000 		nop 
 452 03d4 00000000 		nop 
 453 03d8 00000000 		nop
 454              	 # 0 "" 2
 246:../risc_runtime/risc_interrupt.c **** }
 455              		.loc 1 246 0
 456              	 #NO_APP
 457 03dc 25E8C003 		move	$sp,$fp
 458              	$LCFI6 = .
 459              		.cfi_def_cfa_register 29
 460 03e0 0C00BE8F 		lw	$fp,12($sp)
 461 03e4 1000BD27 		addiu	$sp,$sp,16
 462              	$LCFI7 = .
 463              		.cfi_restore 30
 464              		.cfi_def_cfa_offset 0
 465 03e8 0800E003 		j	$31
 465      00000000 
 466              		.end	risc_disable_interrupts
 467              		.cfi_endproc
 468              	$LFE1:
 470              		.align	2
 471              		.globl	risc_enable_interrupts
 472              	$LFB2 = .
 247:../risc_runtime/risc_interrupt.c **** 
 248:../risc_runtime/risc_interrupt.c **** void risc_enable_interrupts()
 249:../risc_runtime/risc_interrupt.c **** {
 473              		.loc 1 249 0
 474              		.cfi_startproc
 475              		.set	nomips16
 476              		.ent	risc_enable_interrupts
 478              	risc_enable_interrupts:
 479              		.frame	$fp,16,$31		# vars= 8, regs= 1/0, args= 0, gp= 0
 480              		.mask	0x40000000,-4
 481              		.fmask	0x00000000,0
 482 03f0 F0FFBD27 		addiu	$sp,$sp,-16
 483              	$LCFI8 = .
 484              		.cfi_def_cfa_offset 16
 485 03f4 0C00BEAF 		sw	$fp,12($sp)
 486              		.cfi_offset 30, -4
 487 03f8 25F0A003 		move	$fp,$sp
 488              	$LCFI9 = .
 489              		.cfi_def_cfa_register 30
 490              	$LBB9 = .
 250:../risc_runtime/risc_interrupt.c ****     unsigned int CP0_Status;
 251:../risc_runtime/risc_interrupt.c ****     CP0_Status = mips_read_c0_register(C0_STATUS);
 491              		.loc 1 251 0
 492              	 #APP
 493              	 # 251 "../risc_runtime/risc_interrupt.c" 1
 494 03fc 00600240 		mfc0	$2, $12
 495              	 # 0 "" 2
 496              	 #NO_APP
 497 0400 0000C2AF 		sw	$2,0($fp)
 497      00000000 
 498 0408 0000C28F 		lw	$2,0($fp)
 499              		#nop
 500 040c 00000000 	$LBE9 = .
 501 0410 0400C2AF 		sw	$2,4($fp)
 252:../risc_runtime/risc_interrupt.c ****     CP0_Status |= ((1<<22)|(1<<2)|(1<<0));
 502 0414 00000000 		.loc 1 252 0
 503 0418 0400C38F 		lw	$3,4($fp)
 504 041c 4000023C 		li	$2,4194304			# 0x400000
 505 0420 05004234 		ori	$2,$2,0x5
 506 0424 25106200 		or	$2,$3,$2
 507 0428 0400C2AF 		sw	$2,4($fp)
 253:../risc_runtime/risc_interrupt.c ****     mips_write_c0_register(C0_STATUS, CP0_Status);
 508 042c 00000000 		.loc 1 253 0
 509 0430 0400C28F 		lw	$2,4($fp)
 510              		#nop
 511              	 #APP
 512 0434 00000000 	 # 253 "../risc_runtime/risc_interrupt.c" 1
 513 0438 00608240 		mtc0	$2, $12 
 514 043c 00000000 		nop 
 515 0440 00000000 		nop 
 516 0444 00000000 		nop
 517              	 # 0 "" 2
 254:../risc_runtime/risc_interrupt.c **** }
 518              		.loc 1 254 0
 519              	 #NO_APP
 520 0448 25E8C003 		move	$sp,$fp
 521              	$LCFI10 = .
 522              		.cfi_def_cfa_register 29
 523 044c 0C00BE8F 		lw	$fp,12($sp)
 524 0450 1000BD27 		addiu	$sp,$sp,16
 525              	$LCFI11 = .
 526              		.cfi_restore 30
 527              		.cfi_def_cfa_offset 0
 528 0454 0800E003 		j	$31
 528      00000000 
 529              		.end	risc_enable_interrupts
 530              		.cfi_endproc
 531              	$LFE2:
 533              		.align	2
 534              	$LFB3 = .
 255:../risc_runtime/risc_interrupt.c **** 
 256:../risc_runtime/risc_interrupt.c **** static int type_to_index(RISC_INTERRUPT_TYPE type)
 257:../risc_runtime/risc_interrupt.c **** {
 535              		.loc 1 257 0
 536              		.cfi_startproc
 537              		.set	nomips16
 538              		.ent	type_to_index
 540              	type_to_index:
 541              		.frame	$fp,16,$31		# vars= 8, regs= 1/0, args= 0, gp= 0
 542              		.mask	0x40000000,-4
 543              		.fmask	0x00000000,0
 544              		.set	noreorder
 545              		.set	nomacro
 546 045c F0FFBD27 		addiu	$sp,$sp,-16
 547              	$LCFI12 = .
 548              		.cfi_def_cfa_offset 16
 549 0460 0C00BEAF 		sw	$fp,12($sp)
 550              		.cfi_offset 30, -4
 551 0464 25F0A003 		move	$fp,$sp
 552              	$LCFI13 = .
 553              		.cfi_def_cfa_register 30
 554 0468 1000C4AF 		sw	$4,16($fp)
 258:../risc_runtime/risc_interrupt.c ****     unsigned int index = 0;
 555              		.loc 1 258 0
 556 046c 0000C0AF 		sw	$0,0($fp)
 259:../risc_runtime/risc_interrupt.c ****     unsigned int temp = 0;
 557              		.loc 1 259 0
 558 0470 0400C0AF 		sw	$0,4($fp)
 260:../risc_runtime/risc_interrupt.c ****     temp = type>>8;
 559 0474 00000000 		.loc 1 260 0
 560 0478 1000C28F 		lw	$2,16($fp)
 561 047c 00000000 		nop
 562 0480 02120200 		srl	$2,$2,8
 563 0484 0400C2AF 		sw	$2,4($fp)
 261:../risc_runtime/risc_interrupt.c ****     if (temp == 8)return (129 + (type&0xFF));
 564 0488 00000000 		.loc 1 261 0
 565 048c 0400C38F 		lw	$3,4($fp)
 566 0490 08000224 		li	$2,8			# 0x8
 567 0494 07006214 		bne	$3,$2,$L13
 568 0498 00000000 		nop
 569              	
 570              		.loc 1 261 0 is_stmt 0 discriminator 1
 571 049c 1000C28F 		lw	$2,16($fp)
 572 04a0 00000000 		nop
 573 04a4 FF004230 		andi	$2,$2,0xff
 574 04a8 81004224 		addiu	$2,$2,129
 575 04ac 3C010008 		j	$L14
 576 04b0 00000000 		nop
 577              	
 578              	$L13:
 262:../risc_runtime/risc_interrupt.c ****     else
 263:../risc_runtime/risc_interrupt.c ****     {
 264:../risc_runtime/risc_interrupt.c ****       index = (type)&0x1F;
 579              		.loc 1 264 0 is_stmt 1
 580 04b4 1000C28F 		lw	$2,16($fp)
 581 04b8 00000000 		nop
 582 04bc 1F004230 		andi	$2,$2,0x1f
 583 04c0 0000C2AF 		sw	$2,0($fp)
 265:../risc_runtime/risc_interrupt.c ****       index |= (type&~0x1F)>>3;
 584 04c4 00000000 		.loc 1 265 0
 585 04c8 1000C38F 		lw	$3,16($fp)
 586 04cc E0FF0224 		li	$2,-32			# 0xffffffffffffffe0
 587 04d0 24106200 		and	$2,$3,$2
 588 04d4 C2100200 		srl	$2,$2,3
 589 04d8 0000C38F 		lw	$3,0($fp)
 590 04dc 00000000 		nop
 591 04e0 25106200 		or	$2,$3,$2
 592 04e4 0000C2AF 		sw	$2,0($fp)
 266:../risc_runtime/risc_interrupt.c ****     }
 267:../risc_runtime/risc_interrupt.c ****     return index;
 593 04e8 00000000 		.loc 1 267 0
 594 04ec 0000C28F 		lw	$2,0($fp)
 595              	$L14:
 268:../risc_runtime/risc_interrupt.c **** }
 596              		.loc 1 268 0
 597 04f0 25E8C003 		move	$sp,$fp
 598              	$LCFI14 = .
 599              		.cfi_def_cfa_register 29
 600 04f4 0C00BE8F 		lw	$fp,12($sp)
 601 04f8 1000BD27 		addiu	$sp,$sp,16
 602              	$LCFI15 = .
 603              		.cfi_restore 30
 604              		.cfi_def_cfa_offset 0
 605 04fc 0800E003 		j	$31
 606 0500 00000000 		nop
 607              	
 608              		.set	macro
 609              		.set	reorder
 610              		.end	type_to_index
 611              		.cfi_endproc
 612              	$LFE3:
 614              		.align	2
 615              		.globl	risc_register_interrupt
 616              	$LFB4 = .
 269:../risc_runtime/risc_interrupt.c **** 
 270:../risc_runtime/risc_interrupt.c **** enum ERL_ERROR risc_register_interrupt(RISC_INTERRUPT fn, RISC_INTERRUPT_TYPE type)
 271:../risc_runtime/risc_interrupt.c **** {
 617              		.loc 1 271 0
 618              		.cfi_startproc
 619              		.set	nomips16
 620              		.ent	risc_register_interrupt
 622              	risc_register_interrupt:
 623              		.frame	$fp,32,$31		# vars= 8, regs= 2/0, args= 16, gp= 0
 624              		.mask	0xc0000000,-4
 625              		.fmask	0x00000000,0
 626              		.set	noreorder
 627              		.set	nomacro
 628 0504 E0FFBD27 		addiu	$sp,$sp,-32
 629              	$LCFI16 = .
 630              		.cfi_def_cfa_offset 32
 631 0508 1C00BFAF 		sw	$31,28($sp)
 632 050c 1800BEAF 		sw	$fp,24($sp)
 633              		.cfi_offset 31, -4
 634              		.cfi_offset 30, -8
 635 0510 25F0A003 		move	$fp,$sp
 636              	$LCFI17 = .
 637              		.cfi_def_cfa_register 30
 638 0514 2000C4AF 		sw	$4,32($fp)
 639 0518 2400C5AF 		sw	$5,36($fp)
 272:../risc_runtime/risc_interrupt.c ****   if (fn != 0)
 640 051c 00000000 		.loc 1 272 0
 641 0520 2000C28F 		lw	$2,32($fp)
 642 0524 00000000 		nop
 643 0528 11004010 		beq	$2,$0,$L16
 644 052c 00000000 		nop
 645              	
 646              	$LBB10 = .
 273:../risc_runtime/risc_interrupt.c ****   {
 274:../risc_runtime/risc_interrupt.c ****     unsigned int index = type_to_index(type);
 647              		.loc 1 274 0
 648 0530 2400C48F 		lw	$4,36($fp)
 649 0534 1701000C 		jal	type_to_index
 650 0538 00000000 		nop
 651              	
 652 053c 1000C2AF 		sw	$2,16($fp)
 275:../risc_runtime/risc_interrupt.c ****     risc_hnlr_func[index] = fn;
 653              		.loc 1 275 0
 654 0540 0000023C 		lui	$2,%hi(risc_hnlr_func)
 655 0544 1000C38F 		lw	$3,16($fp)
 656 0548 00000000 		nop
 657 054c 80180300 		sll	$3,$3,2
 658 0550 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 659 0554 21106200 		addu	$2,$3,$2
 660 0558 2000C38F 		lw	$3,32($fp)
 661 055c 00000000 		nop
 662 0560 000043AC 		sw	$3,0($2)
 663              	$LBE10 = .
 276:../risc_runtime/risc_interrupt.c ****   }
 277:../risc_runtime/risc_interrupt.c ****   else return ERL_UNITIALIZED_ARG;
 278:../risc_runtime/risc_interrupt.c ****   return ERL_NO_ERROR;
 664              		.loc 1 278 0
 665 0564 25100000 		move	$2,$0
 666 0568 5D010008 		j	$L18
 667 056c 00000000 		nop
 668              	
 669              	$L16:
 277:../risc_runtime/risc_interrupt.c ****   return ERL_NO_ERROR;
 670              		.loc 1 277 0
 671 0570 02000224 		li	$2,2			# 0x2
 672              	$L18:
 279:../risc_runtime/risc_interrupt.c **** }
 673              		.loc 1 279 0
 674 0574 25E8C003 		move	$sp,$fp
 675              	$LCFI18 = .
 676              		.cfi_def_cfa_register 29
 677 0578 1C00BF8F 		lw	$31,28($sp)
 678 057c 1800BE8F 		lw	$fp,24($sp)
 679 0580 2000BD27 		addiu	$sp,$sp,32
 680              	$LCFI19 = .
 681              		.cfi_restore 30
 682              		.cfi_restore 31
 683              		.cfi_def_cfa_offset 0
 684 0584 0800E003 		j	$31
 685 0588 00000000 		nop
 686              	
 687              		.set	macro
 688              		.set	reorder
 689              		.end	risc_register_interrupt
 690              		.cfi_endproc
 691              	$LFE4:
 693              		.align	2
 694              	$LFB5 = .
 280:../risc_runtime/risc_interrupt.c **** 
 281:../risc_runtime/risc_interrupt.c **** //TODO
 282:../risc_runtime/risc_interrupt.c **** 
 283:../risc_runtime/risc_interrupt.c **** static int get_power_of(unsigned int v)
 284:../risc_runtime/risc_interrupt.c **** {
 695              		.loc 1 284 0
 696              		.cfi_startproc
 697              		.set	nomips16
 698              		.ent	get_power_of
 700              	get_power_of:
 701              		.frame	$fp,16,$31		# vars= 8, regs= 1/0, args= 0, gp= 0
 702              		.mask	0x40000000,-4
 703              		.fmask	0x00000000,0
 704 058c F0FFBD27 		addiu	$sp,$sp,-16
 705              	$LCFI20 = .
 706              		.cfi_def_cfa_offset 16
 707 0590 0C00BEAF 		sw	$fp,12($sp)
 708              		.cfi_offset 30, -4
 709 0594 25F0A003 		move	$fp,$sp
 710              	$LCFI21 = .
 711              		.cfi_def_cfa_register 30
 712 0598 1000C4AF 		sw	$4,16($fp)
 285:../risc_runtime/risc_interrupt.c ****   int cnt = 0;
 713              		.loc 1 285 0
 714 059c 0000C0AF 		sw	$0,0($fp)
 286:../risc_runtime/risc_interrupt.c ****   asm volatile("move $t2, %1\n\t"
 715 05a0 00000000 		.loc 1 286 0
 716 05a4 1000C28F 		lw	$2,16($fp)
 717              		#nop
 718              	 #APP
 719 05a8 00000000 	 # 286 "../risc_runtime/risc_interrupt.c" 1
 720 05ac 25504000 		move $t2, $2
 721 05b0 20584B71 		clz $t3, $t2
 722 05b4 25106001 		move $2, $t3
 723              		
 724              	 # 0 "" 2
 725              	 #NO_APP
 726 05b8 0000C2AF 		sw	$2,0($fp)
 287:../risc_runtime/risc_interrupt.c ****                 "clz $t3, $t2\n\t"
 288:../risc_runtime/risc_interrupt.c ****                 "move %0, $t3\n\t":"=r"(cnt):"r"(v));
 289:../risc_runtime/risc_interrupt.c ****   return 31-cnt;
 727              		.loc 1 289 0
 728 05bc 1F000324 		li	$3,31			# 0x1f
 729 05c0 0000C28F 		lw	$2,0($fp)
 730 05c4 00000000 		#nop
 731 05c8 23106200 		subu	$2,$3,$2
 290:../risc_runtime/risc_interrupt.c **** }
 732              		.loc 1 290 0
 733 05cc 25E8C003 		move	$sp,$fp
 734              	$LCFI22 = .
 735              		.cfi_def_cfa_register 29
 736 05d0 0C00BE8F 		lw	$fp,12($sp)
 737 05d4 1000BD27 		addiu	$sp,$sp,16
 738              	$LCFI23 = .
 739              		.cfi_restore 30
 740              		.cfi_def_cfa_offset 0
 741 05d8 0800E003 		j	$31
 741      00000000 
 742              		.end	get_power_of
 743              		.cfi_endproc
 744              	$LFE5:
 746              		.align	2
 747              	$LFB6 = .
 291:../risc_runtime/risc_interrupt.c **** 
 292:../risc_runtime/risc_interrupt.c **** static int get_cause_risc(unsigned int v, unsigned int cpu_id)
 293:../risc_runtime/risc_interrupt.c **** {
 748              		.loc 1 293 0
 749              		.cfi_startproc
 750              		.set	nomips16
 751              		.ent	get_cause_risc
 753              	get_cause_risc:
 754              		.frame	$fp,48,$31		# vars= 24, regs= 2/0, args= 16, gp= 0
 755              		.mask	0xc0000000,-4
 756              		.fmask	0x00000000,0
 757              		.set	noreorder
 758              		.set	nomacro
 759 05e0 D0FFBD27 		addiu	$sp,$sp,-48
 760              	$LCFI24 = .
 761              		.cfi_def_cfa_offset 48
 762 05e4 2C00BFAF 		sw	$31,44($sp)
 763 05e8 2800BEAF 		sw	$fp,40($sp)
 764              		.cfi_offset 31, -4
 765              		.cfi_offset 30, -8
 766 05ec 25F0A003 		move	$fp,$sp
 767              	$LCFI25 = .
 768              		.cfi_def_cfa_register 30
 769 05f0 3000C4AF 		sw	$4,48($fp)
 770 05f4 3400C5AF 		sw	$5,52($fp)
 294:../risc_runtime/risc_interrupt.c ****     int i = 0;
 771              		.loc 1 294 0
 772 05f8 1000C0AF 		sw	$0,16($fp)
 295:../risc_runtime/risc_interrupt.c ****     unsigned int qstr_num = 6, temp;
 773              		.loc 1 295 0
 774 05fc 06000224 		li	$2,6			# 0x6
 775 0600 1400C2AF 		sw	$2,20($fp)
 296:../risc_runtime/risc_interrupt.c ****     for (i=0; i<5; i++)
 776              		.loc 1 296 0
 777 0604 1000C0AF 		sw	$0,16($fp)
 778 0608 9A010008 		j	$L22
 779 060c 00000000 		nop
 780              	
 781              	$L24:
 297:../risc_runtime/risc_interrupt.c ****     {
 298:../risc_runtime/risc_interrupt.c ****       temp = (v>>(10+i)) & 1;
 782              		.loc 1 298 0
 783 0610 1000C28F 		lw	$2,16($fp)
 784 0614 00000000 		nop
 785 0618 0A004224 		addiu	$2,$2,10
 786 061c 3000C38F 		lw	$3,48($fp)
 787 0620 00000000 		nop
 788 0624 06104300 		srl	$2,$3,$2
 789 0628 01004230 		andi	$2,$2,0x1
 790 062c 1800C2AF 		sw	$2,24($fp)
 299:../risc_runtime/risc_interrupt.c ****       if (temp) qstr_num = i;
 791 0630 00000000 		.loc 1 299 0
 792 0634 1800C28F 		lw	$2,24($fp)
 793 0638 00000000 		nop
 794 063c 05004010 		beq	$2,$0,$L23
 795 0640 00000000 		nop
 796              	
 797              		.loc 1 299 0 is_stmt 0 discriminator 1
 798 0644 1000C28F 		lw	$2,16($fp)
 799 0648 00000000 		nop
 800 064c 1400C2AF 		sw	$2,20($fp)
 801              	$L23:
 296:../risc_runtime/risc_interrupt.c ****     for (i=0; i<5; i++)
 802 0650 00000000 		.loc 1 296 0 is_stmt 1
 803 0654 1000C28F 		lw	$2,16($fp)
 804 0658 00000000 		nop
 805 065c 01004224 		addiu	$2,$2,1
 806 0660 1000C2AF 		sw	$2,16($fp)
 807              	$L22:
 296:../risc_runtime/risc_interrupt.c ****     for (i=0; i<5; i++)
 808 0664 00000000 		.loc 1 296 0 is_stmt 0 discriminator 1
 809 0668 1000C28F 		lw	$2,16($fp)
 810 066c 00000000 		nop
 811 0670 05004228 		slt	$2,$2,5
 812 0674 E6FF4014 		bne	$2,$0,$L24
 813 0678 00000000 		nop
 814              	
 300:../risc_runtime/risc_interrupt.c ****     }
 301:../risc_runtime/risc_interrupt.c **** 
 302:../risc_runtime/risc_interrupt.c **** 	if ((qstr_num>=0) && (qstr_num<=4))
 815              		.loc 1 302 0 is_stmt 1
 816 067c 1400C28F 		lw	$2,20($fp)
 817 0680 00000000 		nop
 818 0684 0500422C 		sltu	$2,$2,5
 819 0688 31004010 		beq	$2,$0,$L25
 820 068c 00000000 		nop
 821              	
 822              	$LBB11 = .
 303:../risc_runtime/risc_interrupt.c **** 	{
 304:../risc_runtime/risc_interrupt.c **** 		int maskr_val = *MASKR[cpu_id][qstr_num];
 823              		.loc 1 304 0
 824 0690 0000023C 		lui	$2,%hi(MASKR)
 825 0694 3400C38F 		lw	$3,52($fp)
 826 0698 00000000 		nop
 827 069c 80200300 		sll	$4,$3,2
 828 06a0 1400C38F 		lw	$3,20($fp)
 829 06a4 00000000 		nop
 830 06a8 21188300 		addu	$3,$4,$3
 831 06ac 80180300 		sll	$3,$3,2
 832 06b0 C0024224 		addiu	$2,$2,%lo(MASKR)
 833 06b4 21106200 		addu	$2,$3,$2
 834 06b8 0000428C 		lw	$2,0($2)
 835 06bc 00000000 		nop
 836 06c0 0000428C 		lw	$2,0($2)
 837 06c4 00000000 		nop
 838 06c8 1C00C2AF 		sw	$2,28($fp)
 305:../risc_runtime/risc_interrupt.c **** 		int qstr_val  = *QSTR[cpu_id][qstr_num];
 839              		.loc 1 305 0
 840 06cc 0000023C 		lui	$2,%hi(QSTR)
 841 06d0 3400C38F 		lw	$3,52($fp)
 842 06d4 00000000 		nop
 843 06d8 80200300 		sll	$4,$3,2
 844 06dc 1400C38F 		lw	$3,20($fp)
 845 06e0 00000000 		nop
 846 06e4 21188300 		addu	$3,$4,$3
 847 06e8 80180300 		sll	$3,$3,2
 848 06ec D0024224 		addiu	$2,$2,%lo(QSTR)
 849 06f0 21106200 		addu	$2,$3,$2
 850 06f4 0000428C 		lw	$2,0($2)
 851 06f8 00000000 		nop
 852 06fc 0000428C 		lw	$2,0($2)
 853 0700 00000000 		nop
 854 0704 2000C2AF 		sw	$2,32($fp)
 306:../risc_runtime/risc_interrupt.c **** 		int bit = get_power_of(maskr_val&qstr_val);
 855 0708 00000000 		.loc 1 306 0
 856 070c 1C00C38F 		lw	$3,28($fp)
 857 0710 2000C28F 		lw	$2,32($fp)
 858 0714 00000000 		nop
 859 0718 24106200 		and	$2,$3,$2
 860 071c 25204000 		move	$4,$2
 861 0720 6301000C 		jal	get_power_of
 862 0724 00000000 		nop
 863              	
 864 0728 2400C2AF 		sw	$2,36($fp)
 307:../risc_runtime/risc_interrupt.c **** 		return (qstr_num<<8)|bit;
 865 072c 00000000 		.loc 1 307 0
 866 0730 1400C28F 		lw	$2,20($fp)
 867 0734 00000000 		nop
 868 0738 001A0200 		sll	$3,$2,8
 869 073c 2400C28F 		lw	$2,36($fp)
 870 0740 00000000 		nop
 871 0744 25106200 		or	$2,$3,$2
 872 0748 5F020008 		j	$L26
 873 074c 00000000 		nop
 874              	
 875              	$L25:
 876              	$LBE11 = .
 308:../risc_runtime/risc_interrupt.c **** 	}
 309:../risc_runtime/risc_interrupt.c ****     else if(v&0x8000)
 877              		.loc 1 309 0
 878 0750 3000C28F 		lw	$2,48($fp)
 879 0754 00000000 		nop
 880 0758 00804230 		andi	$2,$2,0x8000
 881 075c 04004010 		beq	$2,$0,$L27
 882 0760 00000000 		nop
 883              	
 310:../risc_runtime/risc_interrupt.c ****     {
 311:../risc_runtime/risc_interrupt.c ****         // RISC_INT_COMPARE
 312:../risc_runtime/risc_interrupt.c ****         return RISC_COMPARE;
 884              		.loc 1 312 0
 885 0764 00050224 		li	$2,1280			# 0x500
 886 0768 5F020008 		j	$L26
 887 076c 00000000 		nop
 888              	
 889              	$L27:
 313:../risc_runtime/risc_interrupt.c ****     }
 314:../risc_runtime/risc_interrupt.c ****     //Exceptions
 315:../risc_runtime/risc_interrupt.c ****     if (((v&0x7F)>>2) == 1) return RICS_EXC_MOD;
 890              		.loc 1 315 0
 891 0770 3000C28F 		lw	$2,48($fp)
 892 0774 00000000 		nop
 893 0778 7F004230 		andi	$2,$2,0x7f
 894 077c 82180200 		srl	$3,$2,2
 895 0780 01000224 		li	$2,1			# 0x1
 896 0784 04006214 		bne	$3,$2,$L28
 897 0788 00000000 		nop
 898              	
 899              		.loc 1 315 0 is_stmt 0 discriminator 1
 900 078c 01080224 		li	$2,2049			# 0x801
 901 0790 5F020008 		j	$L26
 902 0794 00000000 		nop
 903              	
 904              	$L28:
 316:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 2) return RICS_EXC_TLBL;
 905              		.loc 1 316 0 is_stmt 1
 906 0798 3000C28F 		lw	$2,48($fp)
 907 079c 00000000 		nop
 908 07a0 7F004230 		andi	$2,$2,0x7f
 909 07a4 82180200 		srl	$3,$2,2
 910 07a8 02000224 		li	$2,2			# 0x2
 911 07ac 04006214 		bne	$3,$2,$L29
 912 07b0 00000000 		nop
 913              	
 914              		.loc 1 316 0 is_stmt 0 discriminator 1
 915 07b4 02080224 		li	$2,2050			# 0x802
 916 07b8 5F020008 		j	$L26
 917 07bc 00000000 		nop
 918              	
 919              	$L29:
 317:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 3) return RICS_EXC_TLBS;
 920              		.loc 1 317 0 is_stmt 1
 921 07c0 3000C28F 		lw	$2,48($fp)
 922 07c4 00000000 		nop
 923 07c8 7F004230 		andi	$2,$2,0x7f
 924 07cc 82180200 		srl	$3,$2,2
 925 07d0 03000224 		li	$2,3			# 0x3
 926 07d4 04006214 		bne	$3,$2,$L30
 927 07d8 00000000 		nop
 928              	
 929              		.loc 1 317 0 is_stmt 0 discriminator 1
 930 07dc 03080224 		li	$2,2051			# 0x803
 931 07e0 5F020008 		j	$L26
 932 07e4 00000000 		nop
 933              	
 934              	$L30:
 318:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 4) return RICS_EXC_ADEL;
 935              		.loc 1 318 0 is_stmt 1
 936 07e8 3000C28F 		lw	$2,48($fp)
 937 07ec 00000000 		nop
 938 07f0 7F004230 		andi	$2,$2,0x7f
 939 07f4 82180200 		srl	$3,$2,2
 940 07f8 04000224 		li	$2,4			# 0x4
 941 07fc 04006214 		bne	$3,$2,$L31
 942 0800 00000000 		nop
 943              	
 944              		.loc 1 318 0 is_stmt 0 discriminator 1
 945 0804 04080224 		li	$2,2052			# 0x804
 946 0808 5F020008 		j	$L26
 947 080c 00000000 		nop
 948              	
 949              	$L31:
 319:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 5) return RICS_EXC_ADES;
 950              		.loc 1 319 0 is_stmt 1
 951 0810 3000C28F 		lw	$2,48($fp)
 952 0814 00000000 		nop
 953 0818 7F004230 		andi	$2,$2,0x7f
 954 081c 82180200 		srl	$3,$2,2
 955 0820 05000224 		li	$2,5			# 0x5
 956 0824 04006214 		bne	$3,$2,$L32
 957 0828 00000000 		nop
 958              	
 959              		.loc 1 319 0 is_stmt 0 discriminator 1
 960 082c 05080224 		li	$2,2053			# 0x805
 961 0830 5F020008 		j	$L26
 962 0834 00000000 		nop
 963              	
 964              	$L32:
 320:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 8) return RICS_EXC_SYS;
 965              		.loc 1 320 0 is_stmt 1
 966 0838 3000C28F 		lw	$2,48($fp)
 967 083c 00000000 		nop
 968 0840 7F004230 		andi	$2,$2,0x7f
 969 0844 82180200 		srl	$3,$2,2
 970 0848 08000224 		li	$2,8			# 0x8
 971 084c 04006214 		bne	$3,$2,$L33
 972 0850 00000000 		nop
 973              	
 974              		.loc 1 320 0 is_stmt 0 discriminator 1
 975 0854 06080224 		li	$2,2054			# 0x806
 976 0858 5F020008 		j	$L26
 977 085c 00000000 		nop
 978              	
 979              	$L33:
 321:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 9) return RICS_EXC_BP;
 980              		.loc 1 321 0 is_stmt 1
 981 0860 3000C28F 		lw	$2,48($fp)
 982 0864 00000000 		nop
 983 0868 7F004230 		andi	$2,$2,0x7f
 984 086c 82180200 		srl	$3,$2,2
 985 0870 09000224 		li	$2,9			# 0x9
 986 0874 04006214 		bne	$3,$2,$L34
 987 0878 00000000 		nop
 988              	
 989              		.loc 1 321 0 is_stmt 0 discriminator 1
 990 087c 07080224 		li	$2,2055			# 0x807
 991 0880 5F020008 		j	$L26
 992 0884 00000000 		nop
 993              	
 994              	$L34:
 322:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 10) return RICS_EXC_RI;
 995              		.loc 1 322 0 is_stmt 1
 996 0888 3000C28F 		lw	$2,48($fp)
 997 088c 00000000 		nop
 998 0890 7F004230 		andi	$2,$2,0x7f
 999 0894 82180200 		srl	$3,$2,2
 1000 0898 0A000224 		li	$2,10			# 0xa
 1001 089c 04006214 		bne	$3,$2,$L35
 1002 08a0 00000000 		nop
 1003              	
 1004              		.loc 1 322 0 is_stmt 0 discriminator 1
 1005 08a4 08080224 		li	$2,2056			# 0x808
 1006 08a8 5F020008 		j	$L26
 1007 08ac 00000000 		nop
 1008              	
 1009              	$L35:
 323:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 11) return RICS_EXC_CPU;
 1010              		.loc 1 323 0 is_stmt 1
 1011 08b0 3000C28F 		lw	$2,48($fp)
 1012 08b4 00000000 		nop
 1013 08b8 7F004230 		andi	$2,$2,0x7f
 1014 08bc 82180200 		srl	$3,$2,2
 1015 08c0 0B000224 		li	$2,11			# 0xb
 1016 08c4 04006214 		bne	$3,$2,$L36
 1017 08c8 00000000 		nop
 1018              	
 1019              		.loc 1 323 0 is_stmt 0 discriminator 1
 1020 08cc 09080224 		li	$2,2057			# 0x809
 1021 08d0 5F020008 		j	$L26
 1022 08d4 00000000 		nop
 1023              	
 1024              	$L36:
 324:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 12) return RICS_EXC_OV;
 1025              		.loc 1 324 0 is_stmt 1
 1026 08d8 3000C28F 		lw	$2,48($fp)
 1027 08dc 00000000 		nop
 1028 08e0 7F004230 		andi	$2,$2,0x7f
 1029 08e4 82180200 		srl	$3,$2,2
 1030 08e8 0C000224 		li	$2,12			# 0xc
 1031 08ec 04006214 		bne	$3,$2,$L37
 1032 08f0 00000000 		nop
 1033              	
 1034              		.loc 1 324 0 is_stmt 0 discriminator 1
 1035 08f4 0A080224 		li	$2,2058			# 0x80a
 1036 08f8 5F020008 		j	$L26
 1037 08fc 00000000 		nop
 1038              	
 1039              	$L37:
 325:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 13) return RICS_EXC_TRAP;
 1040              		.loc 1 325 0 is_stmt 1
 1041 0900 3000C28F 		lw	$2,48($fp)
 1042 0904 00000000 		nop
 1043 0908 7F004230 		andi	$2,$2,0x7f
 1044 090c 82180200 		srl	$3,$2,2
 1045 0910 0D000224 		li	$2,13			# 0xd
 1046 0914 04006214 		bne	$3,$2,$L38
 1047 0918 00000000 		nop
 1048              	
 1049              		.loc 1 325 0 is_stmt 0 discriminator 1
 1050 091c 0B080224 		li	$2,2059			# 0x80b
 1051 0920 5F020008 		j	$L26
 1052 0924 00000000 		nop
 1053              	
 1054              	$L38:
 326:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 15) return RICS_EXC_FPE;
 1055              		.loc 1 326 0 is_stmt 1
 1056 0928 3000C28F 		lw	$2,48($fp)
 1057 092c 00000000 		nop
 1058 0930 7F004230 		andi	$2,$2,0x7f
 1059 0934 82180200 		srl	$3,$2,2
 1060 0938 0F000224 		li	$2,15			# 0xf
 1061 093c 04006214 		bne	$3,$2,$L39
 1062 0940 00000000 		nop
 1063              	
 1064              		.loc 1 326 0 is_stmt 0 discriminator 1
 1065 0944 0C080224 		li	$2,2060			# 0x80c
 1066 0948 5F020008 		j	$L26
 1067 094c 00000000 		nop
 1068              	
 1069              	$L39:
 327:../risc_runtime/risc_interrupt.c ****     else if (((v&0x7F)>>2) == 24) return RICS_EXC_MCHECK;
 1070              		.loc 1 327 0 is_stmt 1
 1071 0950 3000C28F 		lw	$2,48($fp)
 1072 0954 00000000 		nop
 1073 0958 7F004230 		andi	$2,$2,0x7f
 1074 095c 82180200 		srl	$3,$2,2
 1075 0960 18000224 		li	$2,24			# 0x18
 1076 0964 04006214 		bne	$3,$2,$L40
 1077 0968 00000000 		nop
 1078              	
 1079              		.loc 1 327 0 is_stmt 0 discriminator 1
 1080 096c 0D080224 		li	$2,2061			# 0x80d
 1081 0970 5F020008 		j	$L26
 1082 0974 00000000 		nop
 1083              	
 1084              	$L40:
 328:../risc_runtime/risc_interrupt.c **** 	return 0;
 1085              		.loc 1 328 0 is_stmt 1
 1086 0978 25100000 		move	$2,$0
 1087              	$L26:
 329:../risc_runtime/risc_interrupt.c **** }
 1088              		.loc 1 329 0
 1089 097c 25E8C003 		move	$sp,$fp
 1090              	$LCFI26 = .
 1091              		.cfi_def_cfa_register 29
 1092 0980 2C00BF8F 		lw	$31,44($sp)
 1093 0984 2800BE8F 		lw	$fp,40($sp)
 1094 0988 3000BD27 		addiu	$sp,$sp,48
 1095              	$LCFI27 = .
 1096              		.cfi_restore 30
 1097              		.cfi_restore 31
 1098              		.cfi_def_cfa_offset 0
 1099 098c 0800E003 		j	$31
 1100 0990 00000000 		nop
 1101              	
 1102              		.set	macro
 1103              		.set	reorder
 1104              		.end	get_cause_risc
 1105              		.cfi_endproc
 1106              	$LFE6:
 1108              		.align	2
 1109              		.globl	risc_enable_interrupt
 1110              	$LFB7 = .
 330:../risc_runtime/risc_interrupt.c **** 
 331:../risc_runtime/risc_interrupt.c **** void risc_enable_interrupt(RISC_INTERRUPT_TYPE type, int cpu_id)
 332:../risc_runtime/risc_interrupt.c **** {
 1111              		.loc 1 332 0
 1112              		.cfi_startproc
 1113              		.set	nomips16
 1114              		.ent	risc_enable_interrupt
 1116              	risc_enable_interrupt:
 1117              		.frame	$fp,32,$31		# vars= 24, regs= 1/0, args= 0, gp= 0
 1118              		.mask	0x40000000,-4
 1119              		.fmask	0x00000000,0
 1120 0994 E0FFBD27 		addiu	$sp,$sp,-32
 1121              	$LCFI28 = .
 1122              		.cfi_def_cfa_offset 32
 1123 0998 1C00BEAF 		sw	$fp,28($sp)
 1124              		.cfi_offset 30, -4
 1125 099c 25F0A003 		move	$fp,$sp
 1126              	$LCFI29 = .
 1127              		.cfi_def_cfa_register 30
 1128 09a0 2000C4AF 		sw	$4,32($fp)
 1129 09a4 2400C5AF 		sw	$5,36($fp)
 333:../risc_runtime/risc_interrupt.c ****     unsigned int CP0_Status = 0;
 1130              		.loc 1 333 0
 1131 09a8 0000C0AF 		sw	$0,0($fp)
 334:../risc_runtime/risc_interrupt.c ****     unsigned int qstr_num = 0;
 1132              		.loc 1 334 0
 1133 09ac 0400C0AF 		sw	$0,4($fp)
 335:../risc_runtime/risc_interrupt.c ****     unsigned int qstr_bit = 0;
 1134              		.loc 1 335 0
 1135 09b0 0800C0AF 		sw	$0,8($fp)
 336:../risc_runtime/risc_interrupt.c **** 
 337:../risc_runtime/risc_interrupt.c ****     qstr_num = (type>>8) & 0xFF;
 1136 09b4 00000000 		.loc 1 337 0
 1137 09b8 2000C28F 		lw	$2,32($fp)
 1138 09bc 00000000 		#nop
 1139 09c0 02120200 		srl	$2,$2,8
 1140 09c4 FF004230 		andi	$2,$2,0xff
 1141 09c8 0400C2AF 		sw	$2,4($fp)
 338:../risc_runtime/risc_interrupt.c ****     qstr_bit = type & 0xFF;
 1142 09cc 00000000 		.loc 1 338 0
 1143 09d0 2000C28F 		lw	$2,32($fp)
 1144 09d4 00000000 		#nop
 1145 09d8 FF004230 		andi	$2,$2,0xff
 1146 09dc 0800C2AF 		sw	$2,8($fp)
 339:../risc_runtime/risc_interrupt.c ****     if ((qstr_num>=0) && (qstr_num<6))
 1147 09e0 00000000 		.loc 1 339 0
 1148 09e4 0400C28F 		lw	$2,4($fp)
 1149 09e8 00000000 		#nop
 1150 09ec 0600422C 		sltu	$2,$2,6
 1151 09f0 3C004010 		beq	$2,$0,$L42
 1151      00000000 
 1152              	$LBB12 = .
 340:../risc_runtime/risc_interrupt.c ****     {
 341:../risc_runtime/risc_interrupt.c ****         CP0_Status = mips_read_c0_register(C0_STATUS);
 1153              		.loc 1 341 0
 1154              	 #APP
 1155              	 # 341 "../risc_runtime/risc_interrupt.c" 1
 1156 09f8 00600240 		mfc0	$2, $12
 1157              	 # 0 "" 2
 1158              	 #NO_APP
 1159 09fc 0C00C2AF 		sw	$2,12($fp)
 1159      00000000 
 1160 0a04 0C00C28F 		lw	$2,12($fp)
 1161              		#nop
 1162 0a08 00000000 	$LBE12 = .
 1163 0a0c 0000C2AF 		sw	$2,0($fp)
 342:../risc_runtime/risc_interrupt.c **** 
 343:../risc_runtime/risc_interrupt.c ****         CP0_Status |= 1<<(10+qstr_num);
 1164 0a10 00000000 		.loc 1 343 0
 1165 0a14 0400C28F 		lw	$2,4($fp)
 1166 0a18 00000000 		#nop
 1167 0a1c 0A004224 		addiu	$2,$2,10
 1168 0a20 01000324 		li	$3,1			# 0x1
 1169 0a24 04104300 		sll	$2,$3,$2
 1170 0a28 0000C38F 		lw	$3,0($fp)
 1171 0a2c 00000000 		#nop
 1172 0a30 25106200 		or	$2,$3,$2
 1173 0a34 0000C2AF 		sw	$2,0($fp)
 344:../risc_runtime/risc_interrupt.c ****     	CP0_Status |= 1;
 1174 0a38 00000000 		.loc 1 344 0
 1175 0a3c 0000C28F 		lw	$2,0($fp)
 1176 0a40 00000000 		#nop
 1177 0a44 01004234 		ori	$2,$2,0x1
 1178 0a48 0000C2AF 		sw	$2,0($fp)
 345:../risc_runtime/risc_interrupt.c **** 
 346:../risc_runtime/risc_interrupt.c ****     	mips_write_c0_register(C0_STATUS, CP0_Status );
 1179 0a4c 00000000 		.loc 1 346 0
 1180 0a50 0000C28F 		lw	$2,0($fp)
 1181              		#nop
 1182              	 #APP
 1183 0a54 00000000 	 # 346 "../risc_runtime/risc_interrupt.c" 1
 1184 0a58 00608240 		mtc0	$2, $12 
 1185 0a5c 00000000 		nop 
 1186 0a60 00000000 		nop 
 1187 0a64 00000000 		nop
 1188              	 # 0 "" 2
 347:../risc_runtime/risc_interrupt.c **** 
 348:../risc_runtime/risc_interrupt.c ****         *MASKR[cpu_id][qstr_num] |= 1<<(qstr_bit);
 1189              		.loc 1 348 0
 1190              	 #NO_APP
 1191 0a68 0000023C 		lui	$2,%hi(MASKR)
 1192 0a6c 2400C38F 		lw	$3,36($fp)
 1193 0a70 00000000 		#nop
 1194 0a74 80200300 		sll	$4,$3,2
 1195 0a78 0400C38F 		lw	$3,4($fp)
 1196 0a7c 00000000 		#nop
 1197 0a80 21188300 		addu	$3,$4,$3
 1198 0a84 80180300 		sll	$3,$3,2
 1199 0a88 C0024224 		addiu	$2,$2,%lo(MASKR)
 1200 0a8c 21106200 		addu	$2,$3,$2
 1201 0a90 0000428C 		lw	$2,0($2)
 1202 0a94 0000033C 		lui	$3,%hi(MASKR)
 1203 0a98 2400C48F 		lw	$4,36($fp)
 1204 0a9c 00000000 		#nop
 1205 0aa0 80280400 		sll	$5,$4,2
 1206 0aa4 0400C48F 		lw	$4,4($fp)
 1207 0aa8 00000000 		#nop
 1208 0aac 2120A400 		addu	$4,$5,$4
 1209 0ab0 80200400 		sll	$4,$4,2
 1210 0ab4 C0026324 		addiu	$3,$3,%lo(MASKR)
 1211 0ab8 21188300 		addu	$3,$4,$3
 1212 0abc 0000638C 		lw	$3,0($3)
 1213 0ac0 00000000 		#nop
 1214 0ac4 0000648C 		lw	$4,0($3)
 1215 0ac8 0800C38F 		lw	$3,8($fp)
 1216 0acc 01000524 		li	$5,1			# 0x1
 1217 0ad0 04186500 		sll	$3,$5,$3
 1218 0ad4 25188300 		or	$3,$4,$3
 1219 0ad8 000043AC 		sw	$3,0($2)
 1220 0adc CB020008 		j	$L41
 1220      00000000 
 1221              	$L42:
 349:../risc_runtime/risc_interrupt.c ****     }
 350:../risc_runtime/risc_interrupt.c ****     else if(type == RISC_COMPARE)
 1222              		.loc 1 350 0
 1223 0ae4 2000C38F 		lw	$3,32($fp)
 1224 0ae8 00050224 		li	$2,1280			# 0x500
 1225 0aec 0F006214 		bne	$3,$2,$L41
 1225      00000000 
 1226              	$LBB13 = .
 351:../risc_runtime/risc_interrupt.c ****     {
 352:../risc_runtime/risc_interrupt.c ****         // RISC_COMPARE
 353:../risc_runtime/risc_interrupt.c ****         CP0_Status = mips_read_c0_register(C0_STATUS);
 1227              		.loc 1 353 0
 1228              	 #APP
 1229              	 # 353 "../risc_runtime/risc_interrupt.c" 1
 1230 0af4 00600240 		mfc0	$2, $12
 1231              	 # 0 "" 2
 1232              	 #NO_APP
 1233 0af8 1000C2AF 		sw	$2,16($fp)
 1233      00000000 
 1234 0b00 1000C28F 		lw	$2,16($fp)
 1235              		#nop
 1236 0b04 00000000 	$LBE13 = .
 1237 0b08 0000C2AF 		sw	$2,0($fp)
 354:../risc_runtime/risc_interrupt.c ****         mips_write_c0_register(C0_STATUS, (CP0_Status|0x8001) );
 1238 0b0c 00000000 		.loc 1 354 0
 1239 0b10 0000C28F 		lw	$2,0($fp)
 1240 0b14 00000000 		#nop
 1241 0b18 01804234 		ori	$2,$2,0x8001
 1242              	 #APP
 1243              	 # 354 "../risc_runtime/risc_interrupt.c" 1
 1244 0b1c 00608240 		mtc0	$2, $12 
 1245 0b20 00000000 		nop 
 1246 0b24 00000000 		nop 
 1247 0b28 00000000 		nop
 1248              	 # 0 "" 2
 1249              	 #NO_APP
 1250              	$L41:
 355:../risc_runtime/risc_interrupt.c ****     }
 356:../risc_runtime/risc_interrupt.c **** }
 1251              		.loc 1 356 0
 1252 0b2c 25E8C003 		move	$sp,$fp
 1253              	$LCFI30 = .
 1254              		.cfi_def_cfa_register 29
 1255 0b30 1C00BE8F 		lw	$fp,28($sp)
 1256 0b34 2000BD27 		addiu	$sp,$sp,32
 1257              	$LCFI31 = .
 1258              		.cfi_restore 30
 1259              		.cfi_def_cfa_offset 0
 1260 0b38 0800E003 		j	$31
 1260      00000000 
 1261              		.end	risc_enable_interrupt
 1262              		.cfi_endproc
 1263              	$LFE7:
 1265              		.align	2
 1266              		.globl	risc_disable_interrupt
 1267              	$LFB8 = .
 357:../risc_runtime/risc_interrupt.c **** 
 358:../risc_runtime/risc_interrupt.c **** void risc_disable_interrupt(RISC_INTERRUPT_TYPE type, int cpu_id)
 359:../risc_runtime/risc_interrupt.c **** {
 1268              		.loc 1 359 0
 1269              		.cfi_startproc
 1270              		.set	nomips16
 1271              		.ent	risc_disable_interrupt
 1273              	risc_disable_interrupt:
 1274              		.frame	$fp,24,$31		# vars= 16, regs= 1/0, args= 0, gp= 0
 1275              		.mask	0x40000000,-4
 1276              		.fmask	0x00000000,0
 1277 0b40 E8FFBD27 		addiu	$sp,$sp,-24
 1278              	$LCFI32 = .
 1279              		.cfi_def_cfa_offset 24
 1280 0b44 1400BEAF 		sw	$fp,20($sp)
 1281              		.cfi_offset 30, -4
 1282 0b48 25F0A003 		move	$fp,$sp
 1283              	$LCFI33 = .
 1284              		.cfi_def_cfa_register 30
 1285 0b4c 1800C4AF 		sw	$4,24($fp)
 1286 0b50 1C00C5AF 		sw	$5,28($fp)
 360:../risc_runtime/risc_interrupt.c ****     unsigned int CP0_Status = 0;
 1287              		.loc 1 360 0
 1288 0b54 0000C0AF 		sw	$0,0($fp)
 361:../risc_runtime/risc_interrupt.c **** 	unsigned int qstr_num = 0;
 1289              		.loc 1 361 0
 1290 0b58 0400C0AF 		sw	$0,4($fp)
 362:../risc_runtime/risc_interrupt.c **** 	unsigned int qstr_bit = 0;
 1291              		.loc 1 362 0
 1292 0b5c 0800C0AF 		sw	$0,8($fp)
 363:../risc_runtime/risc_interrupt.c **** 
 364:../risc_runtime/risc_interrupt.c **** 	qstr_num = (type>>8) & 0xFF;
 1293 0b60 00000000 		.loc 1 364 0
 1294 0b64 1800C28F 		lw	$2,24($fp)
 1295 0b68 00000000 		#nop
 1296 0b6c 02120200 		srl	$2,$2,8
 1297 0b70 FF004230 		andi	$2,$2,0xff
 1298 0b74 0400C2AF 		sw	$2,4($fp)
 365:../risc_runtime/risc_interrupt.c **** 	qstr_bit = type & 0xFF;
 1299 0b78 00000000 		.loc 1 365 0
 1300 0b7c 1800C28F 		lw	$2,24($fp)
 1301 0b80 00000000 		#nop
 1302 0b84 FF004230 		andi	$2,$2,0xff
 1303 0b88 0800C2AF 		sw	$2,8($fp)
 366:../risc_runtime/risc_interrupt.c **** 	if (qstr_bit != 0)
 1304 0b8c 00000000 		.loc 1 366 0
 1305 0b90 0800C28F 		lw	$2,8($fp)
 1306 0b94 00000000 		#nop
 1307 0b98 21004010 		beq	$2,$0,$L45
 1307      00000000 
 367:../risc_runtime/risc_interrupt.c **** 	{
 368:../risc_runtime/risc_interrupt.c **** 	  *MASKR[cpu_id][qstr_num] &= ~(1<<(qstr_bit));
 1308              		.loc 1 368 0
 1309 0ba0 0000023C 		lui	$2,%hi(MASKR)
 1310 0ba4 1C00C38F 		lw	$3,28($fp)
 1311 0ba8 00000000 		#nop
 1312 0bac 80200300 		sll	$4,$3,2
 1313 0bb0 0400C38F 		lw	$3,4($fp)
 1314 0bb4 00000000 		#nop
 1315 0bb8 21188300 		addu	$3,$4,$3
 1316 0bbc 80180300 		sll	$3,$3,2
 1317 0bc0 C0024224 		addiu	$2,$2,%lo(MASKR)
 1318 0bc4 21106200 		addu	$2,$3,$2
 1319 0bc8 0000428C 		lw	$2,0($2)
 1320 0bcc 0000033C 		lui	$3,%hi(MASKR)
 1321 0bd0 1C00C48F 		lw	$4,28($fp)
 1322 0bd4 00000000 		#nop
 1323 0bd8 80280400 		sll	$5,$4,2
 1324 0bdc 0400C48F 		lw	$4,4($fp)
 1325 0be0 00000000 		#nop
 1326 0be4 2120A400 		addu	$4,$5,$4
 1327 0be8 80200400 		sll	$4,$4,2
 1328 0bec C0026324 		addiu	$3,$3,%lo(MASKR)
 1329 0bf0 21188300 		addu	$3,$4,$3
 1330 0bf4 0000638C 		lw	$3,0($3)
 1331 0bf8 00000000 		#nop
 1332 0bfc 0000648C 		lw	$4,0($3)
 1333 0c00 0800C38F 		lw	$3,8($fp)
 1334 0c04 01000524 		li	$5,1			# 0x1
 1335 0c08 04186500 		sll	$3,$5,$3
 1336 0c0c 27180300 		nor	$3,$0,$3
 1337 0c10 24188300 		and	$3,$4,$3
 1338 0c14 000043AC 		sw	$3,0($2)
 1339 0c18 1E030008 		j	$L44
 1339      00000000 
 1340              	$L45:
 369:../risc_runtime/risc_interrupt.c **** 	}
 370:../risc_runtime/risc_interrupt.c **** 	else if (qstr_num < 6)
 1341              		.loc 1 370 0
 1342 0c20 0400C28F 		lw	$2,4($fp)
 1343 0c24 00000000 		#nop
 1344 0c28 0600422C 		sltu	$2,$2,6
 1345 0c2c 12004010 		beq	$2,$0,$L44
 1345      00000000 
 371:../risc_runtime/risc_interrupt.c **** 	{
 372:../risc_runtime/risc_interrupt.c **** 	  asm volatile ("mfc0 %0, $12" :"=r"(CP0_Status));
 1346              		.loc 1 372 0
 1347              	 #APP
 1348              	 # 372 "../risc_runtime/risc_interrupt.c" 1
 1349 0c34 00600240 		mfc0 $2, $12
 1350              	 # 0 "" 2
 1351              	 #NO_APP
 1352 0c38 0000C2AF 		sw	$2,0($fp)
 373:../risc_runtime/risc_interrupt.c ****       CP0_Status &= ~(1<<(10+qstr_num));
 1353 0c3c 00000000 		.loc 1 373 0
 1354 0c40 0400C28F 		lw	$2,4($fp)
 1355 0c44 00000000 		#nop
 1356 0c48 0A004224 		addiu	$2,$2,10
 1357 0c4c 01000324 		li	$3,1			# 0x1
 1358 0c50 04104300 		sll	$2,$3,$2
 1359 0c54 27100200 		nor	$2,$0,$2
 1360 0c58 0000C38F 		lw	$3,0($fp)
 1361 0c5c 00000000 		#nop
 1362 0c60 24106200 		and	$2,$3,$2
 1363 0c64 0000C2AF 		sw	$2,0($fp)
 374:../risc_runtime/risc_interrupt.c ****       asm volatile ("mtc0 %0, $12" ::"r"(CP0_Status));
 1364 0c68 00000000 		.loc 1 374 0
 1365 0c6c 0000C28F 		lw	$2,0($fp)
 1366              		#nop
 1367              	 #APP
 1368 0c70 00000000 	 # 374 "../risc_runtime/risc_interrupt.c" 1
 1369 0c74 00608240 		mtc0 $2, $12
 1370              	 # 0 "" 2
 1371              	 #NO_APP
 1372              	$L44:
 375:../risc_runtime/risc_interrupt.c **** 	}
 376:../risc_runtime/risc_interrupt.c **** }
 1373              		.loc 1 376 0
 1374 0c78 25E8C003 		move	$sp,$fp
 1375              	$LCFI34 = .
 1376              		.cfi_def_cfa_register 29
 1377 0c7c 1400BE8F 		lw	$fp,20($sp)
 1378 0c80 1800BD27 		addiu	$sp,$sp,24
 1379              	$LCFI35 = .
 1380              		.cfi_restore 30
 1381              		.cfi_def_cfa_offset 0
 1382 0c84 0800E003 		j	$31
 1382      00000000 
 1383              		.end	risc_disable_interrupt
 1384              		.cfi_endproc
 1385              	$LFE8:
 1387              		.align	2
 1388              		.globl	risc_common_handler
 1389              	$LFB9 = .
 377:../risc_runtime/risc_interrupt.c **** 
 378:../risc_runtime/risc_interrupt.c **** void risc_common_handler(int cpu_id)
 379:../risc_runtime/risc_interrupt.c **** {
 1390              		.loc 1 379 0
 1391              		.cfi_startproc
 1392              		.set	nomips16
 1393              		.ent	risc_common_handler
 1395              	risc_common_handler:
 1396              		.frame	$fp,40,$31		# vars= 16, regs= 2/0, args= 16, gp= 0
 1397              		.mask	0xc0000000,-4
 1398              		.fmask	0x00000000,0
 1399 0c8c D8FFBD27 		addiu	$sp,$sp,-40
 1400              	$LCFI36 = .
 1401              		.cfi_def_cfa_offset 40
 1402 0c90 2400BFAF 		sw	$31,36($sp)
 1403 0c94 2000BEAF 		sw	$fp,32($sp)
 1404              		.cfi_offset 31, -4
 1405              		.cfi_offset 30, -8
 1406 0c98 25F0A003 		move	$fp,$sp
 1407              	$LCFI37 = .
 1408              		.cfi_def_cfa_register 30
 1409 0c9c 2800C4AF 		sw	$4,40($fp)
 380:../risc_runtime/risc_interrupt.c ****    unsigned int v = 0;
 1410              		.loc 1 380 0
 1411 0ca0 1000C0AF 		sw	$0,16($fp)
 381:../risc_runtime/risc_interrupt.c ****    int cause = 0;
 1412              		.loc 1 381 0
 1413 0ca4 1400C0AF 		sw	$0,20($fp)
 382:../risc_runtime/risc_interrupt.c ****    asm volatile ("mfc0 %0, $13" :"=r"(v));
 1414              		.loc 1 382 0
 1415              	 #APP
 1416              	 # 382 "../risc_runtime/risc_interrupt.c" 1
 1417 0ca8 00680240 		mfc0 $2, $13
 1418              	 # 0 "" 2
 1419              	 #NO_APP
 1420 0cac 1000C2AF 		sw	$2,16($fp)
 383:../risc_runtime/risc_interrupt.c ****    //cause = get_cause_risc(v, cpu_id);
 384:../risc_runtime/risc_interrupt.c ****    cause = get_cause_risc(v, 0);
 1421 0cb0 00000000 		.loc 1 384 0
 1422 0cb4 1000C48F 		lw	$4,16($fp)
 1423 0cb8 25280000 		move	$5,$0
 1424 0cbc 7801000C 		jal	get_cause_risc
 1424      00000000 
 1425 0cc4 1400C2AF 		sw	$2,20($fp)
 385:../risc_runtime/risc_interrupt.c ****    int index = type_to_index(cause);
 1426 0cc8 00000000 		.loc 1 385 0
 1427 0ccc 1400C28F 		lw	$2,20($fp)
 1428 0cd0 00000000 		#nop
 1429 0cd4 25204000 		move	$4,$2
 1430 0cd8 1701000C 		jal	type_to_index
 1430      00000000 
 1431 0ce0 1800C2AF 		sw	$2,24($fp)
 386:../risc_runtime/risc_interrupt.c **** 
 387:../risc_runtime/risc_interrupt.c ****    if ((cause <= RISC_INT_MEMCH_MAX)&&(cause >= RISC_INT_MEMCH0)  // calls handler
 1432 0ce4 00000000 		.loc 1 387 0
 1433 0ce8 1400C28F 		lw	$2,20($fp)
 1434 0cec 00000000 		#nop
 1435 0cf0 10014228 		slt	$2,$2,272
 1436 0cf4 1C004010 		beq	$2,$0,$L48
 1436      00000000 
 1437              		.loc 1 387 0 is_stmt 0 discriminator 1
 1438 0cfc 1400C28F 		lw	$2,20($fp)
 1439 0d00 00000000 		#nop
 1440 0d04 00014228 		slt	$2,$2,256
 1441 0d08 17004014 		bne	$2,$0,$L48
 1441      00000000 
 388:../risc_runtime/risc_interrupt.c **** 		   &&(risc_hnlr_func[index] != RISC_INTERRUPT_UNKNOWN)) // for all DMA memch interrupts
 1442              		.loc 1 388 0 is_stmt 1
 1443 0d10 0000023C 		lui	$2,%hi(risc_hnlr_func)
 1444 0d14 1800C38F 		lw	$3,24($fp)
 1445 0d18 00000000 		#nop
 1446 0d1c 80180300 		sll	$3,$3,2
 1447 0d20 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 1448 0d24 21106200 		addu	$2,$3,$2
 1449 0d28 0000438C 		lw	$3,0($2)
 1450 0d2c FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1451 0d30 0D006210 		beq	$3,$2,$L48
 1451      00000000 
 389:../risc_runtime/risc_interrupt.c ****    {
 390:../risc_runtime/risc_interrupt.c ****       risc_hnlr_func[index](cause); // arg - RISC_INT_MEMCHx value
 1452              		.loc 1 390 0
 1453 0d38 0000023C 		lui	$2,%hi(risc_hnlr_func)
 1454 0d3c 1800C38F 		lw	$3,24($fp)
 1455 0d40 00000000 		#nop
 1456 0d44 80180300 		sll	$3,$3,2
 1457 0d48 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 1458 0d4c 21106200 		addu	$2,$3,$2
 1459 0d50 0000428C 		lw	$2,0($2)
 1460 0d54 1400C48F 		lw	$4,20($fp)
 1461 0d58 09F84000 		jalr	$2
 1461      00000000 
 1462 0d60 C7030008 		j	$L47
 1462      00000000 
 1463              	$L48:
 391:../risc_runtime/risc_interrupt.c ****    }
 392:../risc_runtime/risc_interrupt.c **** 
 393:../risc_runtime/risc_interrupt.c **** else if ((cause <= 31)&&(cause >= 0)  // calls handler
 1464              		.loc 1 393 0
 1465 0d68 1400C28F 		lw	$2,20($fp)
 1466 0d6c 00000000 		#nop
 1467 0d70 20004228 		slt	$2,$2,32
 1468 0d74 1B004010 		beq	$2,$0,$L50
 1468      00000000 
 1469              		.loc 1 393 0 is_stmt 0 discriminator 1
 1470 0d7c 1400C28F 		lw	$2,20($fp)
 1471 0d80 00000000 		#nop
 1472 0d84 17004004 		bltz	$2,$L50
 1472      00000000 
 394:../risc_runtime/risc_interrupt.c **** 		   &&(risc_hnlr_func[index] != RISC_INTERRUPT_UNKNOWN)) // for all interrupts
 1473              		.loc 1 394 0 is_stmt 1
 1474 0d8c 0000023C 		lui	$2,%hi(risc_hnlr_func)
 1475 0d90 1800C38F 		lw	$3,24($fp)
 1476 0d94 00000000 		#nop
 1477 0d98 80180300 		sll	$3,$3,2
 1478 0d9c 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 1479 0da0 21106200 		addu	$2,$3,$2
 1480 0da4 0000438C 		lw	$3,0($2)
 1481 0da8 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1482 0dac 0D006210 		beq	$3,$2,$L50
 1482      00000000 
 395:../risc_runtime/risc_interrupt.c ****    {
 396:../risc_runtime/risc_interrupt.c **** 	   risc_hnlr_func[index](cause); // arg - RISC_INT_... value
 1483              		.loc 1 396 0
 1484 0db4 0000023C 		lui	$2,%hi(risc_hnlr_func)
 1485 0db8 1800C38F 		lw	$3,24($fp)
 1486 0dbc 00000000 		#nop
 1487 0dc0 80180300 		sll	$3,$3,2
 1488 0dc4 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 1489 0dc8 21106200 		addu	$2,$3,$2
 1490 0dcc 0000428C 		lw	$2,0($2)
 1491 0dd0 1400C48F 		lw	$4,20($fp)
 1492 0dd4 09F84000 		jalr	$2
 1492      00000000 
 1493 0ddc C7030008 		j	$L47
 1493      00000000 
 1494              	$L50:
 397:../risc_runtime/risc_interrupt.c ****    }
 398:../risc_runtime/risc_interrupt.c **** 
 399:../risc_runtime/risc_interrupt.c ****    #if (defined(TARGET_MC30SF6)||defined(TARGET_NVCOM02T))
 400:../risc_runtime/risc_interrupt.c ****    else if ((cause == RISC_FROM_DSP) && (risc_hnlr_func[RISC_FROM_DSP] != RISC_INTERRUPT_UNKNOWN))
 1495              		.loc 1 400 0
 1496 0de4 1400C38F 		lw	$3,20($fp)
 1497 0de8 00040224 		li	$2,1024			# 0x400
 1498 0dec 37006214 		bne	$3,$2,$L51
 1498      00000000 
 1499              		.loc 1 400 0 is_stmt 0 discriminator 1
 1500 0df4 0000023C 		lui	$2,%hi(risc_hnlr_func)
 1501 0df8 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 1502 0dfc 0010438C 		lw	$3,4096($2)
 1503 0e00 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1504 0e04 31006210 		beq	$3,$2,$L51
 1504      00000000 
 401:../risc_runtime/risc_interrupt.c ****    {
 402:../risc_runtime/risc_interrupt.c ****      if (DCSR(0)&0x1)
 1505              		.loc 1 402 0 is_stmt 1
 1506 0e0c 48B8023C 		li	$2,-1203240960			# 0xffffffffb8480000
 1507 0e10 00014234 		ori	$2,$2,0x100
 1508 0e14 0000428C 		lw	$2,0($2)
 1509 0e18 00000000 		#nop
 1510 0e1c 01004230 		andi	$2,$2,0x1
 1511 0e20 11004010 		beq	$2,$0,$L52
 1511      00000000 
 403:../risc_runtime/risc_interrupt.c ****      {
 404:../risc_runtime/risc_interrupt.c ****        risc_hnlr_func[index](R30_L(0));
 1512              		.loc 1 404 0
 1513 0e28 0000023C 		lui	$2,%hi(risc_hnlr_func)
 1514 0e2c 1800C38F 		lw	$3,24($fp)
 1515 0e30 00000000 		#nop
 1516 0e34 80180300 		sll	$3,$3,2
 1517 0e38 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 1518 0e3c 21106200 		addu	$2,$3,$2
 1519 0e40 0000428C 		lw	$2,0($2)
 1520 0e44 48B8033C 		li	$3,-1203240960			# 0xffffffffb8480000
 1521 0e48 3C006334 		ori	$3,$3,0x3c
 1522 0e4c 0000638C 		lw	$3,0($3)
 1523 0e50 00000000 		#nop
 1524 0e54 25206000 		move	$4,$3
 1525 0e58 09F84000 		jalr	$2
 1525      00000000 
 1526 0e60 B1030008 		j	$L53
 1526      00000000 
 1527              	$L52:
 405:../risc_runtime/risc_interrupt.c ****      }
 406:../risc_runtime/risc_interrupt.c ****      else if (DCSR(1)&0x1)
 1528              		.loc 1 406 0
 1529 0e68 88B8023C 		li	$2,-1199046656			# 0xffffffffb8880000
 1530 0e6c 00014234 		ori	$2,$2,0x100
 1531 0e70 0000428C 		lw	$2,0($2)
 1532 0e74 00000000 		#nop
 1533 0e78 01004230 		andi	$2,$2,0x1
 1534 0e7c 11004010 		beq	$2,$0,$L53
 1534      00000000 
 407:../risc_runtime/risc_interrupt.c ****      {
 408:../risc_runtime/risc_interrupt.c ****        risc_hnlr_func[index](R30_L(1));
 1535              		.loc 1 408 0
 1536 0e84 0000023C 		lui	$2,%hi(risc_hnlr_func)
 1537 0e88 1800C38F 		lw	$3,24($fp)
 1538 0e8c 00000000 		#nop
 1539 0e90 80180300 		sll	$3,$3,2
 1540 0e94 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 1541 0e98 21106200 		addu	$2,$3,$2
 1542 0e9c 0000428C 		lw	$2,0($2)
 1543 0ea0 88B8033C 		li	$3,-1199046656			# 0xffffffffb8880000
 1544 0ea4 3C006334 		ori	$3,$3,0x3c
 1545 0ea8 0000638C 		lw	$3,0($3)
 1546 0eac 00000000 		#nop
 1547 0eb0 25206000 		move	$4,$3
 1548 0eb4 09F84000 		jalr	$2
 1548      00000000 
 402:../risc_runtime/risc_interrupt.c ****      {
 1549              		.loc 1 402 0
 1550 0ebc C7030008 		j	$L47
 1550      00000000 
 1551              	$L53:
 1552 0ec4 C7030008 		j	$L47
 1552      00000000 
 1553              	$L51:
 409:../risc_runtime/risc_interrupt.c ****      }
 410:../risc_runtime/risc_interrupt.c ****    }
 411:../risc_runtime/risc_interrupt.c **** #endif
 412:../risc_runtime/risc_interrupt.c ****    else if (risc_hnlr_func[index] != RISC_INTERRUPT_UNKNOWN)
 1554              		.loc 1 412 0
 1555 0ecc 0000023C 		lui	$2,%hi(risc_hnlr_func)
 1556 0ed0 1800C38F 		lw	$3,24($fp)
 1557 0ed4 00000000 		#nop
 1558 0ed8 80180300 		sll	$3,$3,2
 1559 0edc 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 1560 0ee0 21106200 		addu	$2,$3,$2
 1561 0ee4 0000438C 		lw	$3,0($2)
 1562 0ee8 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1563 0eec 0B006210 		beq	$3,$2,$L47
 1563      00000000 
 413:../risc_runtime/risc_interrupt.c ****    {
 414:../risc_runtime/risc_interrupt.c ****        risc_hnlr_func[index](-1);
 1564              		.loc 1 414 0
 1565 0ef4 0000023C 		lui	$2,%hi(risc_hnlr_func)
 1566 0ef8 1800C38F 		lw	$3,24($fp)
 1567 0efc 00000000 		#nop
 1568 0f00 80180300 		sll	$3,$3,2
 1569 0f04 00004224 		addiu	$2,$2,%lo(risc_hnlr_func)
 1570 0f08 21106200 		addu	$2,$3,$2
 1571 0f0c 0000428C 		lw	$2,0($2)
 1572 0f10 FFFF0424 		li	$4,-1			# 0xffffffffffffffff
 1573 0f14 09F84000 		jalr	$2
 1573      00000000 
 1574              	$L47:
 415:../risc_runtime/risc_interrupt.c ****    }
 416:../risc_runtime/risc_interrupt.c **** }
 1575              		.loc 1 416 0
 1576 0f1c 25E8C003 		move	$sp,$fp
 1577              	$LCFI38 = .
 1578              		.cfi_def_cfa_register 29
 1579 0f20 2400BF8F 		lw	$31,36($sp)
 1580 0f24 2000BE8F 		lw	$fp,32($sp)
 1581 0f28 2800BD27 		addiu	$sp,$sp,40
 1582              	$LCFI39 = .
 1583              		.cfi_restore 30
 1584              		.cfi_restore 31
 1585              		.cfi_def_cfa_offset 0
 1586 0f2c 0800E003 		j	$31
 1586      00000000 
 1587              		.end	risc_common_handler
 1588              		.cfi_endproc
 1589              	$LFE9:
 1591              	$Letext0:
 1592              		.file 2 "../risc_runtime/interrupt_mc30sf6.h"
 1593              		.file 3 "../risc_runtime/risc_interrupt.h"
 1594              		.file 4 "../risc_runtime/erlcommon.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ../risc_runtime/risc_interrupt.c
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:12     .data:0000000000000000 risc_hnlr_func
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:18     .data:00000000000002c0 MASKR
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:26     .data:00000000000002d0 QSTR
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:40     .text:0000000000000000 risc_set_interrupts_vector
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:416    .text:0000000000000388 risc_disable_interrupts
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:478    .text:00000000000003f0 risc_enable_interrupts
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:540    .text:000000000000045c type_to_index
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:622    .text:0000000000000504 risc_register_interrupt
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:700    .text:000000000000058c get_power_of
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:753    .text:00000000000005e0 get_cause_risc
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:1116   .text:0000000000000994 risc_enable_interrupt
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:1273   .text:0000000000000b40 risc_disable_interrupt
C:\Users\mamon\AppData\Local\Temp\ccs1IaLT.s:1395   .text:0000000000000c8c risc_common_handler

NO UNDEFINED SYMBOLS
